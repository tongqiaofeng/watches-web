{"remainingRequest":"D:\\aa-tong\\my-projects\\copy\\watches-three\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\copy\\watches-three\\src\\components\\views\\Watch-query.vue?vue&type=template&id=30de57a9&scoped=true&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\copy\\watches-three\\src\\components\\views\\Watch-query.vue","mtime":1597655054666},{"path":"D:\\aa-tong\\my-projects\\copy\\watches-three\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\copy\\watches-three\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\copy\\watches-three\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\copy\\watches-three\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}