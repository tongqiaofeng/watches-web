{"remainingRequest":"D:\\aa-tong\\my-projects\\watches\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\watches\\src\\components\\views\\Completed-handle-list.vue?vue&type=template&id=3da699c0&scoped=true&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\watches\\src\\components\\views\\Completed-handle-list.vue","mtime":1598253754562},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1598242954443},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1598243025443},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1598242954443},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\vue-loader\\lib\\index.js","mtime":1598243025443}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}