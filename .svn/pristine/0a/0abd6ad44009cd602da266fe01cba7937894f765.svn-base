<template>
  <div>
    <!-- 分红管理 待分红 -->
    <div v-if="unBonusSelect.select == 0" class="one">
      <table>
        <tr>
          <th>采购员昵称</th>
          <th>手表数量</th>
          <th>操作</th>
        </tr>
        <tr v-for="(item,index) in list" :key="index">
          <td>
            <p>{{item.nick}}</p>
          </td>
          <td>
            <p>{{item.watchCount}}</p>
          </td>
          <td>
            <el-tooltip class="item" effect="light" content="处理该分红单" placement="top-end">
              <img src="../../assets/imgs/update.png" style="width: 19px;height: 22px;cursor: pointer;"
                @click="disposeBonus(item.buyUserId,item.nick)" />
            </el-tooltip>
          </td>
        </tr>
      </table>
      <div style="width: 100%;height: 50px;">
        <div style="margin:15px 0;position:absolute;right:6%;">
          <el-pagination @current-change="handleCurrentChange" :current-page="page"
            layout="total, prev, pager, next, jumper" :total="total">
          </el-pagination>
        </div>
      </div>
    </div>
    <div v-if="unBonusSelect.select == 1" class="two">
      <div class="back-img" @click="gobackBonusAdmin">
        <div>
          <img src="../../assets/imgs/goback.png" />
        </div>
        <span class="font">返回</span>
      </div>
      <div>
        <p>可结算手表列表：</p>
        <div v-for="(watch,index) in singleBonus" :key="index" class="watch-table">
          <div>
            <input class="selBtn" type="checkbox" :checked='watch.isNoRate == 1 ? false : true' :value="watch.id"
              @change="checkedChange($event,watch,index)" :disabled="watch.isNoRate == 1 ? true : false">
          </div>
          <div>
            <div style="display: flex;">
              <div>
                <img v-image-preview class="img-style"
                  :src="watch.watchPic == null || watch.watchPic == '' ? '' :  img + '/img/watch/' + watch.watchPic.split('|')[0]" />
              </div>
              <div>
                <p class="p-style">
                  <span>品牌：<span>{{watch.watchBrand}}</span></span>
                </p>
                <p class="p-style">
                  <span>型号：<span>{{watch.watchModel}}</span></span>
                </p>
                <p class="p-style">
                  <span>等级：<span>{{watch.watchLevel}}</span></span>
                </p>
                <p class="p-style">
                  <span>批发价：<span>{{watch.price}}</span></span>
                </p>
              </div>
              <div v-show="watch.isNoRate == 1" style="margin-left: 50px;">
                <p style="margin: 0;color: red;">货币汇率缺失，该手表不可参与分红</p>
              </div>
            </div>
            <div style="display: flex;">
              <div>
                <p>售价：<span style="color: #0c7063;">{{formatNumberRgx(watch.sellMoney) + ' HKD'}}</span></p>
                <p>实际成本：<span>{{formatNumberRgx(watch.cost) + ' HKD'}}</span></p>
              </div>
              <div>
                <p style="margin-left: 100px;">利润：
                  <span v-if="watch.isNoRate == 1"
                    :style="{color: (watch.sellMoney-watch.cost) > 0 ? '#0c7063' : 'red'}">{{formatNumberRgx(watch.sellMoney-watch.cost) + ' HKD'}}</span>
                  <span v-if="watch.isNoRate == 0"
                    :style="{color: (watch.sellMoney-watch.adminSettleCheckCost) > 0 ? '#0c7063' : 'red'}">{{formatNumberRgx(watch.sellMoney-watch.adminSettleCheckCost) + ' HKD'}}</span>
                </p>
                <div style="margin-left: 100px;display: flex;">核算成本：
                  <div>
                    <input class="check-cost-input" v-model="singleBonus[index].adminSettleCheckCost"
                      @focus="calculateNowFocusCost(index,watch.isNoRate)"
                      @input="calculateNowCost(watch.id,index,watch.isNoRate)">
                    <span>HKD</span>
                  </div>
                  <div style="margin-left: 20px;display: flex;cursor: pointer;"
                    @click="calculateCost(watch.id,index,watch.isNoRate)">
                    <img style="width: 20px;height: 22px;" src="../../assets/imgs/update.png" />
                    <p style="margin: 0;">修改</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div>
        <p>总实际成本：<span>{{formatNumberRgx(allCost) + ' HKD'}}</span></p>
        <p>总核算成本：<span
            :style="{color: assignedCost == allCost ? '#0c7063' : 'red'}">{{formatNumberRgx(assignedCost) + ' HKD'}}</span>
        </p>
      </div>
      <div>
        <p>总利润：<span>{{formatNumberRgx(allProfit) + ' HKD'}}</span></p>
      </div>
      <div>
        <p>分红金额：</p>
        <div style="margin-left: 10px;">
          <div class="bonus-details-style">
            <p>资金：</p>
            <p>{{fundBonusSum.toFixed(2) + ' HKD'}}</p>
          </div>
          <div class="bonus-details-style">
            <p>公司：</p>
            <p>{{componyBonusSum.toFixed(2) + ' HKD'}}</p>
          </div>

          <div class="bonus-details-style">
            <p>{{buyUserNick}}采购员：</p>
            <p>{{purchaseBonusSum.toFixed(2) + ' HKD'}}</p>
          </div>

          <div v-for="(sell, index) in sellFinalList" :key="index">
            <div class="bonus-details-style">
              <p>{{sell.userNick}}销售员：</p>
              <p>{{sell.money.toFixed(2) + ' HKD'}}</p>
            </div>
          </div>
        </div>
      </div>
      <div style="width: 300px;margin: 0 auto;margin-top: 30px;">
        <el-button type="primary" style="width: 100%;" @click="generateBonusNotes">生成分红单</el-button>
        <el-dialog title="生成分红单" :visible.sync="dialogBonusVisible" center>
          <div style="text-align: center;">
            <p>确定生成该分红单？生成后不可修改</p>
          </div>
          <div slot="footer">
            <el-button @click="dialogBonusVisible = false">取 消</el-button>
            <el-button type="primary" v-preventClick @click="generateBonusSureNotes">确 定</el-button>
          </div>
        </el-dialog>
      </div>
    </div>
    <div v-if="unBonusSelect.select == 2" class="three">
      <div class="back-img" style="margin: 30px 0 0 20px;" @click="gobackBonusWatch">
        <div>
          <img src="../../assets/imgs/goback.png" />
        </div>
        <span class="font">返回</span>
      </div>
      <div>
        <div class="watch-info-top" :style="{color: watchInfoBonus.profit > 0 ? '#0c7063' : 'red'}">
          {{formatNumberRgx(watchInfoBonus.profit)}}
          <span> HKD</span>
        </div>
        <div>
          <p>手表：</p>
          <div style="margin-left: 20px;">
            <p>品牌：<span>{{watchInfoBonus.watch.watchBrand}}</span></p>
            <p>型号：<span>{{watchInfoBonus.watch.watchModel}}</span></p>
            <p>等级：<span>{{watchInfoBonus.watch.watchLevel}}</span></p>
            <p>批发价：<span>{{formatNumberRgx(watchInfoBonus.watch.price) + ' HKD'}}</span></p>
          </div>
        </div>
        <div>
          <p>采购：</p>
          <div style="margin-left: 20px;">
            <p>采购员：<span>{{watchInfoBonus.purchase.buyUserNick}}</span></p>
            <p>采购日期：<span>{{watchInfoBonus.purchase.buyDate}}</span></p>
            <p>机芯号：<span>{{watchInfoBonus.purchase.buyWatchSn}}</span></p>
            <p>采购价格：
              <span>{{formatNumberRgx(watchInfoBonus.purchase.buyWatchPrice) + ' ' + watchInfoBonus.purchase.buyWatchCurrency}}</span>
              <span>（ {{formatNumberRgx(watchInfoBonus.purchase.buyWatchPriceHkd) + ' HKD'}} ）</span>
            </p>
            <p>应退税金额：
              <span>{{formatNumberRgx(watchInfoBonus.purchase.buyTaxMoney) + ' ' + watchInfoBonus.purchase.buyTaxCurrency}}</span>
            </p>
            <p>实退税金额：
              <span>{{formatNumberRgx(watchInfoBonus.purchase.buyTaxRecvMoney) + ' ' + watchInfoBonus.purchase.buyTaxRecvCurrency}}</span>
              <span>（ {{formatNumberRgx(watchInfoBonus.purchase.buyTaxRecvMoneyHkd) + ' HKD'}} ）</span>
            </p>
            <p>小费：
              <span>{{watchInfoBonus.purchase.buyFeeMoney == 0 ? '无' : formatNumberRgx(watchInfoBonus.purchase.buyFeeMoney) + ' ' + watchInfoBonus.purchase.buyWatchCurrency}}</span>
            </p>
            <p>佣金：
              <span>{{watchInfoBonus.purchase.buyCommMoney == 0 ? '无' : formatNumberRgx(watchInfoBonus.purchase.buyCommMoney) + ' ' + watchInfoBonus.purchase.buyWatchCurrency}}</span>
            </p>
            <p>物流费：
              <span>{{formatNumberRgx(watchInfoBonus.purchase.logMoney) + ' HKD'}}</span>
            </p>
            <p>合计成本：
              <span>{{formatNumberRgx(watchInfoBonus.purchase.cost) + ' HKD'}}</span>
            </p>
          </div>
        </div>
        <div>
          <p>销售：</p>
          <div style="margin-left: 20px;">
            <p>销售员：<span>{{watchInfoBonus.sellUserNick}}</span></p>
            <p>销售金额：<span>{{formatNumberRgx(watchInfoBonus.sellMoney) + ' HKD'}}</span></p>
          </div>
        </div>
        <div>
          <p>核算分红：</p>
          <div style="margin-left: 20px;">
            <p>核算成本：
              <el-input v-model="watchList[checkIndex].adminSettleCheckCost"
                style="width: 300px;height: auto;line-height: 40px;" @input="checkCostChange">
                <i slot="suffix" style="color: #000;margin-right:5%;font-style:normal;">HKD</i>
              </el-input>
            </p>
            <div style="width: 60%;">
              <div style="padding: 0 20px;" class="bonus-style">
                <p>应分金额</p>
                <p>实分金额</p>
              </div>
              <div class="bonus-style">
                <p>资金：{{watchList[checkIndex].fundBonusMoney + ' HKD'}}</p>
                <p>
                  <el-input v-model="watchList[checkIndex].fundRecvBonusMoney" @input="bonusChange"
                    style="width: 300px;height: 35px;line-height: 35px;">
                  </el-input>
                </p>
              </div>
              <div class="bonus-style">
                <p>公司：{{watchList[checkIndex].companyBonusMoney + ' HKD'}}</p>
                <p>
                  <el-input v-model="watchList[checkIndex].companyRecvBonusMoney" @input="bonusChange"
                    style="width: 300px;height: 35px;line-height: 35px;">
                  </el-input>
                </p>
              </div>
              <div class="bonus-style">
                <p>采购：{{watchList[checkIndex].buyBonusMoney + ' HKD'}}</p>
                <p>
                  <el-input v-model="watchList[checkIndex].buyRecvBonusMoney" @input="bonusChange"
                    style="width: 300px;height: 35px;line-height: 35px;">
                  </el-input>
                </p>
              </div>
              <div class="bonus-style">
                <p>销售：{{watchList[checkIndex].sellBonusMoney + ' HKD'}}</p>
                <p>
                  <el-input v-model="watchList[checkIndex].sellRecvBonusMoney" @input="bonusChange"
                    style="width: 300px;height: 35px;line-height: 35px;">
                  </el-input>
                </p>
              </div>
              <div class="bonus-style">
                <p>合计：<span style="color: #0c7063;">{{bonusMoneyWatch + ' HKD'}}</span></p>
                <p :style="{color: bonusMoneyAll == bonusMoneyWatch ? '#0c7063' : 'red'}"> {{bonusMoneyAll}} </p>
              </div>
            </div>
          </div>
        </div>
        <div style="width: 300px;margin: 0 auto;margin-top: 30px;">
          <el-button type="primary" style="width: 100%;" @click="BonusSure">确 认</el-button>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
  export default {
    data() {
      return {
        // 0:公司 -2：资金方
        img: this.$store.state.baseUrl,
        page: 1,
        pageNum: 10,
        total: 0,
        list: [],
        buyUserId: '',
        buyUserNick: '',
        singleBonus: {},
        allCost: 0, // 总实际成本
        assignedCost: 0, // 已分配成本
        allProfit: 0, // 总利润

        watchList: [], // 手表分红
        watchFormerList: [],
        users: [], // 人员列表数据
        fundBonusSum: 0, // 资金方总分红
        componyBonusSum: 0, // 公司总分红
        purchaseBonusSum: 0, // 采购员总分红
        sellList: [], // 销售员列表
        sellFinalList: [],

        checkIndex: '',
        watchId: '',
        watchInfoBonus: {}, // 手表详情
        bonusMoneyAll: '', // 实分总金额

        dialogBonusVisible: false,
        checkId: [],
        oldCheckId: 0,

      }
    },
    props: {
      unBonusList: {
        type: Array,
        default: []
      },
      unBonusSelect: {
        type: Object,
        default: {}
      },
    },
    created() {
      this.getList()
    },

    methods: {
      // 获取该采购员的 分红单
      disposeBonus(userId, nick) {
        this.buyUserId = userId;
        this.buyUserNick = nick;
        this.$axios.post(this.$store.state.baseUrl + '/unBonusList?java', {
          buyUserId: this.buyUserId
        }).then(res => {
          console.log('获取该采购员的 分红单');
          console.log(res);
          this.singleBonus = res.data;

          this.watchList = [];
          this.allCost = 0;
          this.allProfit = 0;
          this.assignedCost = 0;
          for (let watch of this.singleBonus) {
            if (watch.isNoRate !== 1) {
              this.allCost += Number(watch.cost);
              this.allProfit += Number(watch.sellMoney - watch.cost);
              console.log(watch);
              this.watchList.push({
                id: watch.id,
                sellUserId: watch.sellUserId,
                sellUserNick: watch.sellUserNick,
                adminSettleCheckCost: watch.cost,
                fundBonusMoney: 0,
                companyBonusMoney: 0,
                buyBonusMoney: 0,
                sellBonusMoney: 0,
                fundRecvBonusMoney: 0,
                companyRecvBonusMoney: 0,
                buyRecvBonusMoney: 0,
                sellRecvBonusMoney: 0
              });
              this.checkId.push(watch.id);
            }
          }
          this.assignedCost = this.allCost;
          this.allCost = Number(this.allCost).toFixed(2);
          this.allProfit = Number(this.allProfit).toFixed(2);
          this.assignedCost = Number(this.assignedCost).toFixed(2);
          console.log(this.watchList);
          console.log(this.checkId);
          this.unBonusSelect.select = 1;
          this.bonusValue();
          // this.calculateDividend();
          this.calculateDividend(() => {
            this.bonusComputed(this.watchList)
          })

        }).catch(err => {
          console.log(err);
        })
      },

      // 核算成本赋值
      bonusValue() {
        for (let j = 0; j < this.watchList.length; j++) {
          for (let i = 0; i < this.singleBonus.length; i++) {
            // console.log(this.singleBonus[i].id);
            // console.log(this.watchList[j].id);
            if (this.watchList[j].id == this.singleBonus[i].id) {
              this.singleBonus[i].adminSettleCheckCost = this.watchList[j].adminSettleCheckCost;
            }
          }
        }
        console.log(this.singleBonus);
      },
      calculateNowFocusCost(index, isNoRate) {
        this.checkIndex = index;
        let checkeds = document.getElementsByClassName('selBtn');
        if (isNoRate !== 1) {
          if (checkeds[this.checkIndex].checked == false) {
            this.$message.warning({
              message: '该手表未选中，不能进行核算，请选择',
              showClose: true,
              duration: 2000
            })
          }
        }
      },
      // 列表核算成本
      calculateNowCost(id, index, isNoRate) {
        console.log(this.singleBonus[index].adminSettleCheckCost);
        console.log(this.watchList[index]);
        this.checkIndex = index;
        this.oldCheckId = this.checkIndex;
        let checkeds = document.getElementsByClassName('selBtn');
        if (isNoRate !== 1) {
          if (checkeds[this.checkIndex].checked == false) {
            this.$message.warning({
              message: '该手表未选中，不能进行核算，请选择',
              showClose: true,
              duration: 2000
            })
          } else {
            for (let m = 0; m < this.watchList.length; m++) {
              if (this.watchList[m].id == id) {
                this.watchList[m].adminSettleCheckCost = this.singleBonus[index].adminSettleCheckCost;
              }
            }
            this.assignedCost = 0;
            for (let index = 0; index < this.watchList.length; index++) {
              // console.log(this.watchList[index].adminSettleCheckCost);
              this.assignedCost += Number(this.watchList[index].adminSettleCheckCost);
            }
            this.allProfit = 0;
            for (let j = 0; j < this.watchList.length; j++) {
              for (let i = 0; i < this.singleBonus.length; i++) {
                // console.log(this.singleBonus[i].id);
                // console.log(this.watchList[j].id);
                if (this.watchList[j].id == this.singleBonus[i].id) {
                  this.allProfit += Number(this.singleBonus[i].sellMoney) - Number(this.watchList[j]
                    .adminSettleCheckCost);
                }
              }
            }
            console.log('11100000000000');
            this.bonusValue();
            // this.calculateDividend();
            // this.bonusComputed(this.watchList);
            this.calculateDividend(() => {
              this.bonusComputed(this.watchList)
            })
          }
        }
      },
      // 核算成本 获取手表详情
      calculateCost(id, index, isNoRate) {
        this.watchId = id;
        this.checkIndex = index;
        this.oldCheckId = this.checkIndex;
        // console.log(this.checkIndex);
        let checkeds = document.getElementsByClassName('selBtn');
        // console.log(checkeds);
        if (isNoRate !== 1) {
          if (checkeds[this.checkIndex].checked == false) {
            this.$message.warning({
              message: '该手表未选中，请选择',
              showClose: true,
              duration: 2000
            })
          } else {
            console.log('ttttttttttttttttttt');
            console.log(this.watchList);
            for (const index in this.watchList) {
              if (this.watchList[index].id == id) {
                this.checkIndex = index;
                this.$axios.post(this.$store.state.baseUrl + '/watchInfoBonus?java', {
                  id: this.watchId
                }).then(res => {
                  console.log('手表详情');
                  console.log(res);
                  console.log(this.checkIndex);
                  this.watchInfoBonus = res.data;
                  this.watchInfoBonus.profit = (this.watchInfoBonus.sellMoney - this
                    .watchList[this.checkIndex].adminSettleCheckCost);
                  console.log('qqqqqqqqqqqqqqqqqqqqq');
                  console.log(this.watchList[this.checkIndex]);
                  this.bonusMoneyWatch = Number(Number(this.watchList[this.checkIndex].fundRecvBonusMoney) +
                    Number(
                      this
                      .watchList[
                        this.checkIndex].companyRecvBonusMoney) + Number(this.watchList[this.checkIndex]
                      .buyRecvBonusMoney) +
                    Number(this.watchList[this.checkIndex].sellRecvBonusMoney)).toFixed(2);
                  this.bonusAll();
                  console.log('核算该手表');
                  this.watchFormerList = JSON.parse(JSON.stringify(this.watchList));
                  console.log(this.watchFormerList);
                  this.unBonusSelect.select = 2;
                  (function smoothscroll() {
                    let currentScroll =
                      document.documentElement.scrollTop || document.body.scrollTop;
                    if (currentScroll > 0) {
                      window.requestAnimationFrame(smoothscroll);
                      window.scrollTo(0, currentScroll - currentScroll / 5);
                    }
                  })();
                }).catch(err => {
                  console.log(err);
                })
              }
            }
          }
        }
      },

      // 核算该手表成本
      checkCostChange() {
        console.log(this.watchFormerList);
        if (Number(this.watchInfoBonus.watch.price) - Number(this.watchList[this.checkIndex].adminSettleCheckCost) <
          0) {
          console.log('批发价小于核算成本');
          // this.watchList[this.checkIndex].fundBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
          //   .watchList[this.checkIndex].adminSettleCheckCost)) * 0.3).toFixed(2);

          this.watchList[this.checkIndex].companyBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
            .watchList[this.checkIndex].adminSettleCheckCost)) * 0.2).toFixed(2);

          // this.watchList[this.checkIndex].fundRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
          //   .watchList[this.checkIndex].adminSettleCheckCost)) * 0.3).toFixed(2);

          this.watchList[this.checkIndex].companyRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
            .watchList[this.checkIndex].adminSettleCheckCost)) * 0.2).toFixed(2);

          if (this.watchInfoBonus.watch.watchLevel == 1) {
            this.watchList[this.checkIndex].buyBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.2).toFixed(2);

            this.watchList[this.checkIndex].sellBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.3).toFixed(2);

            this.watchList[this.checkIndex].buyRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.2).toFixed(2);

            this.watchList[this.checkIndex].sellRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.3).toFixed(2);

          } else if (this.watchInfoBonus.watch.watchLevel == 2) {
            this.watchList[this.checkIndex].buyBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.15).toFixed(2);

            this.watchList[this.checkIndex].sellBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.35).toFixed(2);

            this.watchList[this.checkIndex].buyRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.15).toFixed(2);

            this.watchList[this.checkIndex].sellRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.35).toFixed(2);

          } else if (this.watchInfoBonus.watch.watchLevel == 3) {
            this.watchList[this.checkIndex].buyBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.1).toFixed(2);

            this.watchList[this.checkIndex].sellBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.4).toFixed(2);

            this.watchList[this.checkIndex].buyRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.1).toFixed(2);

            this.watchList[this.checkIndex].sellRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.4).toFixed(2);

          } else if (this.watchInfoBonus.watch.watchLevel == 4) {
            this.watchList[this.checkIndex].buyBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25).toFixed(2);

            this.watchList[this.checkIndex].sellBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25).toFixed(2);

            this.watchList[this.checkIndex].buyRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25).toFixed(2);

            this.watchList[this.checkIndex].sellRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25).toFixed(2);
          }

          // this.watchList[this.checkIndex].fundBonusMoney = (this.watchInfoBonus.sellMoney - Number(this
          //     .watchList[this.checkIndex].adminSettleCheckCost) - this.watchList[this.checkIndex].buyBonusMoney - this
          //   .watchList[this.checkIndex].sellBonusMoney).toFixed(2);

          // this.watchList[this.checkIndex].fundRecvBonusMoney = (this.watchInfoBonus.sellMoney - Number(this
          //     .watchList[this.checkIndex].adminSettleCheckCost) - this.watchList[this.checkIndex].buyRecvBonusMoney -
          //   this
          //   .watchList[this.checkIndex].sellRecvBonusMoney).toFixed(2);
        } else if (Number(this.watchInfoBonus.sellMoney - this.watchInfoBonus.watch.price) < 0) {
          console.log('售价小于批发价');
          // this.watchList[this.checkIndex].fundBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
          //   .watchList[this.checkIndex].adminSettleCheckCost)) * 0.3).toFixed(2);

          this.watchList[this.checkIndex].companyBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
            .watchList[this.checkIndex].adminSettleCheckCost)) * 0.2).toFixed(2);

          // this.watchList[this.checkIndex].fundRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
          //   .watchList[this.checkIndex].adminSettleCheckCost)) * 0.3).toFixed(2);

          this.watchList[this.checkIndex].companyRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
            .watchList[this.checkIndex].adminSettleCheckCost)) * 0.2).toFixed(2);

          if (this.watchInfoBonus.watch.watchLevel == 1) {
            this.watchList[this.checkIndex].buyBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.4).toFixed(2);

            this.watchList[this.checkIndex].sellBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.1).toFixed(2);

            this.watchList[this.checkIndex].buyRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.4).toFixed(2);

            this.watchList[this.checkIndex].sellRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.1).toFixed(2);

          } else if (this.watchInfoBonus.watch.watchLevel == 2) {
            this.watchList[this.checkIndex].buyBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.35).toFixed(2);

            this.watchList[this.checkIndex].sellBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.15).toFixed(2);

            this.watchList[this.checkIndex].buyRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.35).toFixed(2);

            this.watchList[this.checkIndex].sellRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.15).toFixed(2);

          } else if (this.watchInfoBonus.watch.watchLevel == 3) {
            this.watchList[this.checkIndex].buyBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25).toFixed(2);

            this.watchList[this.checkIndex].sellBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25).toFixed(2);

            this.watchList[this.checkIndex].buyRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25).toFixed(2);

            this.watchList[this.checkIndex].sellRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25).toFixed(2);

          } else if (this.watchInfoBonus.watch.watchLevel == 4) {
            this.watchList[this.checkIndex].buyBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25).toFixed(2);

            this.watchList[this.checkIndex].sellBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25).toFixed(2);

            this.watchList[this.checkIndex].buyRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25).toFixed(2);

            this.watchList[this.checkIndex].sellRecvBonusMoney = ((this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25).toFixed(2);
          }

          // this.watchList[this.checkIndex].fundBonusMoney = (this.watchInfoBonus.sellMoney - Number(this
          //     .watchList[this.checkIndex].adminSettleCheckCost) - this.watchList[this.checkIndex].buyBonusMoney - this
          //   .watchList[this.checkIndex].sellBonusMoney).toFixed(2);

          // this.watchList[this.checkIndex].fundRecvBonusMoney = (this.watchInfoBonus.sellMoney - Number(this
          //     .watchList[this.checkIndex].adminSettleCheckCost) - this.watchList[this.checkIndex].buyRecvBonusMoney -
          //   this
          //   .watchList[this.checkIndex].sellRecvBonusMoney).toFixed(2);
        } else {
          console.log('批发价大于核算成本,售价大于批发价');
          // this.watchList[this.checkIndex].fundBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
          //   .watchList[this.checkIndex].adminSettleCheckCost)) * 0.3 + (this.watchInfoBonus.sellMoney - this
          //   .watchInfoBonus.watch.price) * 0.3).toFixed(2);

          this.watchList[this.checkIndex].companyBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
            .watchList[this.checkIndex].adminSettleCheckCost)) * 0.2 + (this.watchInfoBonus.sellMoney - this
            .watchInfoBonus.watch.price) * 0.2).toFixed(2);

          // this.watchList[this.checkIndex].fundRecvBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
          //   .watchList[this.checkIndex].adminSettleCheckCost)) * 0.3 + (this.watchInfoBonus.sellMoney - this
          //   .watchInfoBonus.watch.price) * 0.3).toFixed(2);

          this.watchList[this.checkIndex].companyRecvBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
            .watchList[this.checkIndex].adminSettleCheckCost)) * 0.2 + (this.watchInfoBonus.sellMoney - this
            .watchInfoBonus.watch.price) * 0.2).toFixed(2);

          if (this.watchInfoBonus.watch.watchLevel == 1) {
            this.watchList[this.checkIndex].buyBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.4 + (this.watchInfoBonus.sellMoney - this
              .watchInfoBonus.watch.price) * 0.2).toFixed(2);

            this.watchList[this.checkIndex].sellBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.1 + (this.watchInfoBonus.sellMoney -
              this.watchInfoBonus.watch.price) * 0.3).toFixed(2);

            this.watchList[this.checkIndex].buyRecvBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.4 + (this.watchInfoBonus.sellMoney - this
              .watchInfoBonus.watch.price) * 0.2).toFixed(2);

            this.watchList[this.checkIndex].sellRecvBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.1 + (this.watchInfoBonus.sellMoney -
              this.watchInfoBonus.watch.price) * 0.3).toFixed(2);

          } else if (this.watchInfoBonus.watch.watchLevel == 2) {
            console.log(this.watchInfoBonus.watch.price);
            console.log(this.watchList[this.checkIndex].adminSettleCheckCost);
            console.log(this.watchInfoBonus.sellMoney);
            this.watchList[this.checkIndex].buyBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.35 + (this.watchInfoBonus.sellMoney - this
              .watchInfoBonus.watch.price) * 0.15).toFixed(2);

            this.watchList[this.checkIndex].sellBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.15 + (this.watchInfoBonus.sellMoney -
              this.watchInfoBonus.watch.price) * 0.35).toFixed(2);

            this.watchList[this.checkIndex].buyRecvBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.35 + (this.watchInfoBonus.sellMoney - this
              .watchInfoBonus.watch.price) * 0.15).toFixed(2);

            this.watchList[this.checkIndex].sellRecvBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.15 + (this.watchInfoBonus.sellMoney -
              this.watchInfoBonus.watch.price) * 0.35).toFixed(2);

          } else if (this.watchInfoBonus.watch.watchLevel == 3) {
            this.watchList[this.checkIndex].buyBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25 + (this.watchInfoBonus.sellMoney - this
              .watchInfoBonus.watch.price) * 0.1).toFixed(2);

            this.watchList[this.checkIndex].sellBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25 + (this.watchInfoBonus.sellMoney -
              this.watchInfoBonus.watch.price) * 0.4).toFixed(2);

            this.watchList[this.checkIndex].buyRecvBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25 + (this.watchInfoBonus.sellMoney - this
              .watchInfoBonus.watch.price) * 0.1).toFixed(2);

            this.watchList[this.checkIndex].sellRecvBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25 + (this.watchInfoBonus.sellMoney -
              this.watchInfoBonus.watch.price) * 0.4).toFixed(2);

          } else if (this.watchInfoBonus.watch.watchLevel == 4) {
            this.watchList[this.checkIndex].buyBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25 + (this.watchInfoBonus.sellMoney - this
              .watchInfoBonus.watch.price) * 0.25).toFixed(2);

            this.watchList[this.checkIndex].sellBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25 + (this.watchInfoBonus.sellMoney -
              this.watchInfoBonus.watch.price) * 0.25).toFixed(2);

            this.watchList[this.checkIndex].buyRecvBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25 + (this.watchInfoBonus.sellMoney - this
              .watchInfoBonus.watch.price) * 0.25).toFixed(2);

            this.watchList[this.checkIndex].sellRecvBonusMoney = ((this.watchInfoBonus.watch.price - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost)) * 0.25 + (this.watchInfoBonus.sellMoney -
              this.watchInfoBonus.watch.price) * 0.25).toFixed(2);
          }


        }
        this.watchList[this.checkIndex].fundBonusMoney = (this.watchInfoBonus.sellMoney - Number(this
            .watchList[this.checkIndex].adminSettleCheckCost) - this.watchList[this.checkIndex].buyBonusMoney - this
          .watchList[this.checkIndex].sellBonusMoney - this.watchList[this.checkIndex].companyBonusMoney).toFixed(2);

        this.watchList[this.checkIndex].fundRecvBonusMoney = (this.watchInfoBonus.sellMoney - Number(this
              .watchList[this.checkIndex].adminSettleCheckCost) - this.watchList[this.checkIndex].buyRecvBonusMoney -
            this
            .watchList[this.checkIndex].sellRecvBonusMoney - this.watchList[this.checkIndex].companyRecvBonusMoney)
          .toFixed(2);

        this.watchInfoBonus.profit = (this.watchInfoBonus.sellMoney - this
          .watchList[this.checkIndex].adminSettleCheckCost);
        this.bonusAll();
        console.log(this.watchList[this.checkIndex]);
      },

      bonusChange() {
        console.log(this.watchList);
        this.bonusAll();
      },

      bonusAll() {
        this.bonusMoneyWatch = Number(Number(this.watchList[this.checkIndex].fundBonusMoney) + Number(this
            .watchList[
              this.checkIndex].companyBonusMoney) + Number(this.watchList[this.checkIndex]
            .buyBonusMoney) +
          Number(this.watchList[this.checkIndex].sellBonusMoney)).toFixed(2);
        this.bonusMoneyAll = Number(Number(this.watchList[this.checkIndex].fundRecvBonusMoney) + Number(this
            .watchList[
              this.checkIndex].companyRecvBonusMoney) + Number(this.watchList[this.checkIndex]
            .buyRecvBonusMoney) +
          Number(this.watchList[this.checkIndex].sellRecvBonusMoney)).toFixed(2);
      },

      // 确认该手表分红
      BonusSure() {
        if (this.bonusMoneyWatch !== this.bonusMoneyAll) {
          this.$message.warning({
            message: '合计实分金额与合计应分金额不等，不能保存',
            showClose: true,
            duration: 2000
          })
          return
        }
        if (this.watchList[this.checkIndex].adminSettleCheckCost == 0) {
          this.$message.warning({
            message: '核算成本不能为0，无法保存',
            showClose: true,
            duration: 2000
          })
        } else {
          this.unBonusSelect.select = 1;
          this.checkIndex = this.oldCheckId;
          this.$nextTick(() => {
            let $boxes = document.getElementsByClassName("selBtn");
            for (let i = 0; i < $boxes.length; i++) {
              let id = $boxes[i].value;
              if (this.checkId.indexOf(Number(id)) !== -1) {
                $boxes[i].checked = true;
              } else {
                $boxes[i].checked = false;
              }
            }
          })
          console.log('确认该手表分红');
          console.log(this.watchList[this.checkIndex]);
          console.log(this.watchList);
          this.assignedCost = 0;
          for (let index = 0; index < this.watchList.length; index++) {
            console.log(this.watchList[index].adminSettleCheckCost);
            this.assignedCost += Number(this.watchList[index].adminSettleCheckCost);
          }
          this.allProfit = 0;
          for (let j = 0; j < this.watchList.length; j++) {
            for (let i = 0; i < this.singleBonus.length; i++) {
              console.log(this.singleBonus[i].id);
              console.log(this.watchList[j].id);
              if (this.watchList[j].id == this.singleBonus[i].id) {
                this.allProfit += Number(this.singleBonus[i].sellMoney) - Number(this.watchList[j]
                  .adminSettleCheckCost);
              }
            }
          }
          console.log('11100000000000');
          this.bonusValue();
          // this.calculateDividend();
          // this.bonusComputed(this.watchList);
          // this.calculateDividend(() => {
          this.bonusComputed(this.watchList)
          // })
        }
      },

      // 计算各手表分红
      calculateDividend(callback) {
        for (let i = 0; i < this.watchList.length; i++) {
          for (let j = 0; j < this.singleBonus.length; j++) {
            if (this.singleBonus[j].id == this.watchList[i].id) {
              console.log(this.singleBonus[j]);
              console.log(this.watchList[i]);
              // this.watchList[i].adminSettleCheckCost = this.singleBonus[j].cost;
              console.log(Number(this.singleBonus[j].sellMoney - this.singleBonus[j].price) > 0);
              if (Number(this.singleBonus[j].price - this.watchList[i].adminSettleCheckCost) < 0) {
                console.log('批发价小于核算成本');
                this.watchList[i].companyRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                    .adminSettleCheckCost) *
                  0.2).toFixed(2);
                this.watchList[i].companyBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                    .adminSettleCheckCost) * 0.2)
                  .toFixed(2);

                if (this.singleBonus[j].watchLevel == 1) {
                  this.watchList[i].buyRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) *
                    0.2).toFixed(2);
                  this.watchList[i].buyBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) * 0.2)
                    .toFixed(2);

                  this.watchList[i].sellRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) *
                    0.3).toFixed(2);
                  this.watchList[i].sellBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) * 0.3)
                    .toFixed(2);
                } else if (this.singleBonus[j].watchLevel == 2) {
                  this.watchList[i].buyRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) *
                    0.15).toFixed(2);
                  this.watchList[i].buyBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) * 0.15)
                    .toFixed(2);

                  this.watchList[i].sellRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) *
                    0.35).toFixed(2);
                  this.watchList[i].sellBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) * 0.35)
                    .toFixed(2);
                } else if (this.singleBonus[j].watchLevel == 3) {
                  this.watchList[i].buyRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) *
                    0.1).toFixed(2);
                  this.watchList[i].buyBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) * 0.1)
                    .toFixed(2);

                  this.watchList[i].sellRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) *
                    0.4).toFixed(2);
                  this.watchList[i].sellBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) * 0.4)
                    .toFixed(2);
                } else if (this.singleBonus[j].watchLevel == 4) {
                  this.watchList[i].buyRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) *
                    0.25).toFixed(2);
                  this.watchList[i].buyBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) * 0.25)
                    .toFixed(2);

                  this.watchList[i].sellRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) *
                    0.25).toFixed(2);
                  this.watchList[i].sellBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) * 0.25)
                    .toFixed(2);
                }

                // this.watchList[i].fundRecvBonusMoney = (this.singleBonus[j].sellMoney - this.watchList[i]
                //     .adminSettleCheckCost - this.watchList[i].buyRecvBonusMoney - this.watchList[i].sellRecvBonusMoney)
                //   .toFixed(2);
                // this.watchList[i].fundBonusMoney = (this.singleBonus[j].sellMoney - this.watchList[i]
                //     .adminSettleCheckCost - this.watchList[i].buyBonusMoney - this.watchList[i].sellBonusMoney)
                //   .toFixed(2);
              } else if (Number(this.singleBonus[j].sellMoney - this.singleBonus[j].price) < 0) {
                console.log('售价小于批发价');
                // this.watchList[i].fundRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                //     .adminSettleCheckCost) * 0.3)
                //   .toFixed(2);
                // this.watchList[i].fundBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                //     .adminSettleCheckCost) * 0.3)
                //   .toFixed(2);

                this.watchList[i].companyRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                    .adminSettleCheckCost) *
                  0.2).toFixed(2);
                this.watchList[i].companyBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                    .adminSettleCheckCost) * 0.2)
                  .toFixed(2);

                if (this.singleBonus[j].watchLevel == 1) {
                  this.watchList[i].buyRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) *
                    0.4).toFixed(2);
                  this.watchList[i].buyBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) * 0.4)
                    .toFixed(2);

                  this.watchList[i].sellRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) *
                    0.1).toFixed(2);
                  this.watchList[i].sellBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) * 0.1)
                    .toFixed(2);
                } else if (this.singleBonus[j].watchLevel == 2) {
                  this.watchList[i].buyRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) *
                    0.35).toFixed(2);
                  this.watchList[i].buyBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) * 0.35)
                    .toFixed(2);

                  this.watchList[i].sellRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) *
                    0.15).toFixed(2);
                  this.watchList[i].sellBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) * 0.15)
                    .toFixed(2);
                } else if (this.singleBonus[j].watchLevel == 3) {
                  this.watchList[i].buyRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) *
                    0.25).toFixed(2);
                  this.watchList[i].buyBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) * 0.25)
                    .toFixed(2);

                  this.watchList[i].sellRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) *
                    0.25).toFixed(2);
                  this.watchList[i].sellBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) * 0.25)
                    .toFixed(2);
                } else if (this.singleBonus[j].watchLevel == 4) {
                  this.watchList[i].buyRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) *
                    0.25).toFixed(2);
                  this.watchList[i].buyBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) * 0.25)
                    .toFixed(2);

                  this.watchList[i].sellRecvBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) *
                    0.25).toFixed(2);
                  this.watchList[i].sellBonusMoney = ((this.singleBonus[j].sellMoney - this.watchList[i]
                      .adminSettleCheckCost) * 0.25)
                    .toFixed(2);
                }

                // this.watchList[i].fundRecvBonusMoney = (this.singleBonus[j].sellMoney - this.watchList[i]
                //     .adminSettleCheckCost - this.watchList[i].buyRecvBonusMoney - this.watchList[i].sellRecvBonusMoney)
                //   .toFixed(2);
                // this.watchList[i].fundBonusMoney = (this.singleBonus[j].sellMoney - this.watchList[i]
                //     .adminSettleCheckCost - this.watchList[i].buyBonusMoney - this.watchList[i].sellBonusMoney)
                //   .toFixed(2);
              } else {
                console.log('售价大于批发价');
                // this.watchList[i].fundRecvBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                //   .adminSettleCheckCost) * 0.3 + (
                //   this.singleBonus[j].sellMoney -
                //   this.singleBonus[j].price) * 0.3).toFixed(2);
                // this.watchList[i].fundBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                //   .adminSettleCheckCost) * 0.3 + (this
                //   .singleBonus[i].sellMoney -
                //   this
                //   .singleBonus[i].price) * 0.3).toFixed(2);

                this.watchList[i].companyRecvBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                    .adminSettleCheckCost) * 0.2 +
                  (
                    this.singleBonus[j].sellMoney -
                    this
                    .singleBonus[i].price) * 0.2).toFixed(2);
                this.watchList[i].companyBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                  .adminSettleCheckCost) * 0.2 + (
                  this
                  .singleBonus[i].sellMoney -
                  this
                  .singleBonus[i].price) * 0.2).toFixed(2);

                if (this.singleBonus[j].watchLevel == 1) {
                  this.watchList[i].buyRecvBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                    .adminSettleCheckCost) * 0.4 + (
                    this.singleBonus[j].sellMoney -
                    this
                    .singleBonus[i].price) * 0.2).toFixed(2);
                  this.watchList[i].buyBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                    .adminSettleCheckCost) * 0.4 + (this
                    .singleBonus[i].sellMoney -
                    this
                    .singleBonus[i].price) * 0.2).toFixed(2);

                  this.watchList[i].sellRecvBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                      .adminSettleCheckCost) * 0.1 +
                    (
                      this.singleBonus[j].sellMoney -
                      this
                      .singleBonus[i].price) * 0.3).toFixed(2);
                  this.watchList[i].sellBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                    .adminSettleCheckCost) * 0.1 + (
                    this
                    .singleBonus[i].sellMoney -
                    this
                    .singleBonus[i].price) * 0.3).toFixed(2);
                } else if (this.singleBonus[j].watchLevel == 2) {
                  this.watchList[i].buyRecvBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                      .adminSettleCheckCost) * 0.35 +
                    (
                      this.singleBonus[j].sellMoney -
                      this
                      .singleBonus[i].price) * 0.15).toFixed(2);
                  this.watchList[i].buyBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                    .adminSettleCheckCost) * 0.35 + (
                    this
                    .singleBonus[i].sellMoney -
                    this
                    .singleBonus[i].price) * 0.15).toFixed(2);

                  this.watchList[i].sellRecvBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                      .adminSettleCheckCost) * 0.15 +
                    (
                      this.singleBonus[j].sellMoney -
                      this
                      .singleBonus[i].price) * 0.35).toFixed(2);
                  this.watchList[i].sellBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                    .adminSettleCheckCost) * 0.15 + (
                    this
                    .singleBonus[i].sellMoney -
                    this
                    .singleBonus[i].price) * 0.35).toFixed(2);
                } else if (this.singleBonus[j].watchLevel == 3) {
                  this.watchList[i].buyRecvBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                      .adminSettleCheckCost) * 0.25 +
                    (
                      this.singleBonus[j].sellMoney -
                      this
                      .singleBonus[i].price) * 0.1).toFixed(2);
                  this.watchList[i].buyBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                    .adminSettleCheckCost) * 0.25 + (
                    this
                    .singleBonus[i].sellMoney -
                    this
                    .singleBonus[i].price) * 0.1).toFixed(2);

                  this.watchList[i].sellRecvBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                      .adminSettleCheckCost) * 0.25 +
                    (
                      this.singleBonus[j].sellMoney -
                      this
                      .singleBonus[i].price) * 0.4).toFixed(2);
                  this.watchList[i].sellBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                    .adminSettleCheckCost) * 0.25 + (
                    this
                    .singleBonus[i].sellMoney -
                    this
                    .singleBonus[i].price) * 0.4).toFixed(2);
                } else if (this.singleBonus[j].watchLevel == 4) {
                  this.watchList[i].buyRecvBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                      .adminSettleCheckCost) * 0.25 +
                    (
                      this.singleBonus[j].sellMoney -
                      this
                      .singleBonus[i].price) * 0.25).toFixed(2);
                  this.watchList[i].buyBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                    .adminSettleCheckCost) * 0.25 + (
                    this
                    .singleBonus[i].sellMoney -
                    this
                    .singleBonus[i].price) * 0.25).toFixed(2);

                  this.watchList[i].sellRecvBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                      .adminSettleCheckCost) * 0.25 +
                    (
                      this.singleBonus[j].sellMoney -
                      this
                      .singleBonus[i].price) * 0.25).toFixed(2);
                  this.watchList[i].sellBonusMoney = ((this.singleBonus[j].price - this.watchList[i]
                    .adminSettleCheckCost) * 0.25 + (
                    this
                    .singleBonus[i].sellMoney -
                    this
                    .singleBonus[i].price) * 0.25).toFixed(2);
                }
              }
              this.watchList[i].fundRecvBonusMoney = (this.singleBonus[j].sellMoney - this.watchList[i]
                  .adminSettleCheckCost - this.watchList[i].buyRecvBonusMoney - this.watchList[i].sellRecvBonusMoney -
                  this.watchList[i].companyRecvBonusMoney)
                .toFixed(2);
              this.watchList[i].fundBonusMoney = (this.singleBonus[j].sellMoney - this.watchList[i]
                  .adminSettleCheckCost - this.watchList[i].buyBonusMoney - this.watchList[i].sellBonusMoney - this
                  .watchList[i].companyBonusMoney)
                .toFixed(2);
            }
          }
        }

        // console.log('计算各手表分红');
        // console.log(this.watchList);
        // this.bonusComputed(this.watchList);
        callback()
      },

      // 计算总分红
      bonusComputed(watchList) {
        console.log('计算总共分红');
        this.sellList = [];
        console.log(watchList);
        this.fundBonusSum = 0;
        this.componyBonusSum = 0;
        this.purchaseBonusSum = 0;

        for (let i = 0; i < watchList.length; i++) {
          // console.log('ppppppppppppppp');
          // console.log(watchList[i]);
          // console.log(watchList[i].fundRecvBonusMoney);
          // console.log(watchList[i].buyRecvBonusMoney);
          this.fundBonusSum += Number(Number(watchList[i].fundRecvBonusMoney).toFixed(2));
          this.componyBonusSum += Number(Number(watchList[i].companyRecvBonusMoney).toFixed(2));
          this.purchaseBonusSum += Number(Number(watchList[i].buyRecvBonusMoney).toFixed(2));

          this.sellList.push({
            userId: watchList[i].sellUserId,
            userNick: watchList[i].sellUserNick,
            money: Number(watchList[i].sellRecvBonusMoney).toFixed(2),
            flag: 1
          })
        }
        console.log(this.sellList);
        let result = this.sellList.map(a => a.userNick);
        this.sellFinalList = this.arr(result);

        for (const key in this.sellFinalList) {
          this.sellFinalList[key] = {
            userNick: this.sellFinalList[key],
            money: 0,
            flag: 1
          }
        }
        console.log(this.sellFinalList);

        for (let index = 0; index < this.sellList.length; index++) {
          for (let j = 0; j < this.sellFinalList.length; j++) {
            if (this.sellList[index].userNick == this.sellFinalList[j].userNick) {
              this.sellFinalList[j].userId = this.sellList[index].userId;
              this.sellFinalList[j].money += Number(this.sellList[index].money)
            }
          }
        }

        console.log(this.sellFinalList);

      },
      arr(result) {
        return Array.from(new Set(result))
      },

      // 选择手表
      checkedChange(e, watch, index) {
        console.log('555');
        console.log(index);
        console.log(this.watchList);
        console.log(e.target.checked);
        if (e.target.checked == false && this.watchList.length == 1) {
          this.$message.warning({
            message: '生成分红单手表列表不能为空',
            showClose: true,
            duration: 2000
          })
          e.target.checked = true
        } else {
          if (e.target.checked == true) {
            this.checkId.push(watch.id);
            this.watchList.splice(index, 0, {
              id: watch.id,
              sellUserId: watch.sellUserId,
              sellUserNick: watch.sellUserNick,
              adminSettleCheckCost: this.singleBonus[index].adminSettleCheckCost,
              fundBonusMoney: 0,
              companyBonusMoney: 0,
              buyBonusMoney: 0,
              sellBonusMoney: 0,
              fundRecvBonusMoney: 0,
              companyRecvBonusMoney: 0,
              buyRecvBonusMoney: 0,
              sellRecvBonusMoney: 0
            })
            console.log(watch.cost);
            this.allCost = Number(this.allCost);
            this.allProfit = Number(this.allProfit);
            console.log(this.allProfit);
            this.allCost += Number(watch.cost);
            console.log(Number(watch.sellMoney) - Number(this.singleBonus[index].adminSettleCheckCost));
            this.allProfit += Number(watch.sellMoney) - Number(this.singleBonus[index].adminSettleCheckCost);
            this.calculateDividend(() => {
              this.bonusComputed(this.watchList)
            })
          } else if (e.target.checked == false) {
            for (let index = 0; index < this.checkId.length; index++) {
              if (this.checkId[index] == watch.id) {
                this.checkId.splice(index, 1);
              }
            }
            for (let index in this.watchList) {
              if (this.watchList[index].id == watch.id) {
                this.watchList.splice(index, 1);
              }
            }
            this.allCost -= Number(watch.cost);
            this.allProfit -= (Number(watch.sellMoney) - Number(this.singleBonus[index].adminSettleCheckCost));

            this.bonusComputed(this.watchList)

          }
          this.assignedCost = 0;
          console.log('选择手表');
          console.log(this.watchList);
          for (let index = 0; index < this.watchList.length; index++) {
            this.assignedCost += Number(this.watchList[index].adminSettleCheckCost);
          }
          this.allCost = Number(this.allCost).toFixed(2);
          this.allProfit = Number(this.allProfit).toFixed(2);
          this.assignedCost = Number(this.assignedCost).toFixed(2);
          console.log(this.assignedCost);

        }

        // this.bonusComputed(this.watchList);

      },
      checkData() {
        for (let j = 0; j < this.watchList.length; j++) {
          for (let i = 0; i < this.singleBonus.length; i++) {
            if (this.watchList[j].id == this.singleBonus[i].id) {
              if (this.singleBonus[i].sellMoney - this.singleBonus[i].adminSettleCheckCost < 0) {
                this.$message.warning({
                  message: '选择分红手表利润不能为负，请重新调整核算成本',
                  showClose: true,
                  duration: 2000
                })
                return 1
              }
            }
          }
        }
      },
      // 生成分红单
      generateBonusNotes() {
        if (this.checkData() !== 1) {
          if (this.watchList.length == 0) {
            this.$message.warning({
              message: '选中手表为空，不能生成分红单',
              showClose: true,
              duration: 2000
            })
          } else {
            this.users = [{
              userId: -2,
              userNick: '',
              money: this.fundBonusSum.toFixed(2)
            }, {
              userId: 0,
              userNick: '',
              money: this.componyBonusSum.toFixed(2)
            }, {
              userId: this.buyUserId,
              userNick: this.buyUserNick,
              money: this.purchaseBonusSum.toFixed(2)
            }];
            this.users.push(...this.sellFinalList);
            console.log(this.users);
            this.dialogBonusVisible = true;
          }
        }

      },

      // 确定生成分红单
      generateBonusSureNotes() {
        console.log(this.allProfit);
        console.log(this.buyUserId);
        console.log(this.watchList);
        console.log(this.users);
        this.$axios.post(this.$store.state.baseUrl + '/bonusFormSave?java', {
          // allMoney: this.allProfit,
          buyUserId: this.buyUserId,
          watchList: this.watchList,
          users: this.users
        }).then(res => {
          console.log('生成分红单');
          console.log(res);
          this.dialogBonusVisible = false;
          this.$message.success({
            message: '该分红单提交成功',
            showClose: true,
            duration: 2000
          });
          this.unBonusSelect.select = 0;
          this.$emit('bonusChange', 0);
        }).catch(err => {
          this.$message.error({
            message: err.data.message,
            showClose: true,
            duration: 2000
          })
        })
      },

      // 返回
      gobackBonusAdmin() {
        this.unBonusSelect.select = 0;
      },
      gobackBonusWatch() {
        console.log(this.watchFormerList);
        this.watchList.splice(this.checkIndex, 1, this.watchFormerList[this.checkIndex])
        console.log(this.watchList);
        // this.calculateDividend();
        this.unBonusSelect.select = 1;
        this.checkIndex = this.oldCheckId;

        this.$nextTick(() => {
          let $boxes = document.getElementsByClassName("selBtn");
          for (let i = 0; i < $boxes.length; i++) {
            let id = $boxes[i].value;
            if (this.checkId.indexOf(Number(id)) !== -1) {
              $boxes[i].checked = true;
            } else {
              $boxes[i].checked = false;
            }
          }
        })
      },
      // 分页处理数据
      getList() {
        console.log('分页数据');
        this.total = this.unBonusList.length;
        console.log(this.unBonusList);
        // es6过滤得到满足搜索条件的展示数据list
        this.list = this.unBonusList.filter((item, index) =>
          index < this.page * this.pageNum && index >= this.pageNum * (this.page - 1)
        );
        console.log(this.list);
      },

      // 分页
      handleCurrentChange(val) {
        console.log(`当前页: ${val}`);
        this.page = val;
        this.getList();
        (function smoothscroll() {
          let currentScroll =
            document.documentElement.scrollTop || document.body.scrollTop;
          if (currentScroll > 0) {
            window.requestAnimationFrame(smoothscroll);
            window.scrollTo(0, currentScroll - currentScroll / 5);
          }
        })();
      },
    }
  }
</script>

<style lang="scss" scoped>
  .check-cost-input {
    width: 80px;
    padding-right: 10px;
    border: none;
    outline: none;
    text-align: right;
  }

  .watch-info-top {
    margin: 10px 0;
    font-size: 18px;
    text-align: center;
  }

  .bonus-style {
    display: flex;
    justify-content: space-between;
  }

  .bonus-details-style {
    width: 400px;
    display: flex;
    justify-content: space-between;
  }

  .back-img {
    width: 75px;
    height: 45px;
    margin-bottom: 30px;
    line-height: 45px;
    display: flex;
    justify-content: space-between;
    cursor: pointer;

    div {
      margin-top: 5px;

      img {
        width: 30px;
        height: 25px;
      }
    }

    .font {
      font-size: 17px;
    }
  }

  .watch-table {
    padding: 15px;
    margin-top: 10px;
    display: flex;
    border: 1px solid #ddd;
    border-radius: 5px;

    .img-style {
      width: 100px;
      height: 100px;
      margin-left: 15px;
      border-radius: 30px;
      object-fit: cover;
    }

    .p-style {
      margin: 0;
      margin-left: 15px;
    }
  }

  input[type=checkbox] {
    width: 18px;
    height: 18px;
    cursor: pointer;
    position: relative;
    width: 15px;
    height: 15px;
    font-size: 15px;
  }

  input[type=checkbox]::after {
    position: absolute;
    top: 0;
    background-color: #fff;
    color: #000;
    width: 15px;
    height: 15px;
    display: inline-block;
    visibility: visible;
    padding-left: 0px;
    text-align: center;
    content: ' ';
    border: 1px solid #c8c8c8;
    border-radius: 3px
  }

  input[type=checkbox]:disabled::after {
    content: ' ';
    border: 1px solid #c8c8c8;
    border-radius: 3px;
    background-color: #ddd;
    cursor: not-allowed;
  }

  input[type=checkbox]:checked::after {
    content: "✓";
    font-size: 13px;
    font-weight: bolder;
  }

  td {
    height: 60px;
    margin: 10px 0;
    padding: 20px 0;
    background-color: #f3fbf9;
    font-size: 15px;
    text-align: center;
  }

  .input-style {
    width: 70% !important;
  }

  table {
    width: 100%;
    table-layout: fixed;
    border-collapse: separate;
    border-spacing: 0;

    tr {

      th,
      td {
        width: 20%;
        text-align: center;
        border: 0;
      }
    }
  }
</style>