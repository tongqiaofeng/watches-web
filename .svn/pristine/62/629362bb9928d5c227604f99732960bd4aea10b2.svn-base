{"remainingRequest":"D:\\aa-tong\\upgrade\\up-watches\\node_modules\\babel-loader\\lib\\index.js!D:\\aa-tong\\upgrade\\up-watches\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\aa-tong\\upgrade\\up-watches\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\upgrade\\up-watches\\src\\components\\views\\upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\aa-tong\\upgrade\\up-watches\\src\\components\\views\\upload.vue","mtime":1585632336783},{"path":"D:\\aa-tong\\upgrade\\up-watches\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\upgrade\\up-watches\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\aa-tong\\upgrade\\up-watches\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\upgrade\\up-watches\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["upload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"display:flex;\">\r\n      <div class=\"upload-imgs\">\r\n        <div class=\"add\">\r\n          <form id=\"formUpload\" enctype=\"multipart/form-data\">\r\n            <input @change=\"inputChange($event)\" type=\"file\" name=\"img\" accept='image/*' class=\"inputUpload\" multiple />\r\n            <i class=\"el-icon-plus addIcon\"></i>\r\n          </form>\r\n        </div>\r\n        <div style=\"display:flex;position:relative;\" id=\"delImg\">\r\n          <div v-for=\"(imgurl,index) of imgSrc\" :key=\"index\" style=\"margin-left:10px;position:relative;\">\r\n            <span class=\"spanStyle\" @click=\"delImage(index)\">x</span>\r\n            <img :src=\"img + imgurl\" width=\"100px\" height=\"100px\" style=\"border-radius:5px;object-fit:cover;\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        imgSrc: [],\r\n      }\r\n    },\r\n    methods: {\r\n      // 上传图片\r\n      inputChange(file) {\r\n        console.log(file);\r\n        let imgFiles = file.target.files;\r\n        console.log(imgFiles);\r\n        this.uploadSectionFile(imgFiles);\r\n      },\r\n      // 上传前压缩的方法\r\n      uploadSectionFile(f) { //\t附件上传\r\n        console.log(f);\r\n        let self = this;\r\n        let Orientation;\r\n        let ndata;\r\n        console.log('图片尺寸');\r\n        console.log(f[0].size);\r\n        // * 1024 * 1024\r\n        if (f[0].size <= 1 * 1024 * 1024) {\r\n          //判断图片是否大于1M,是就直接上传\r\n          ndata = f[0];\r\n          self.postImg(ndata);\r\n        } else {\r\n          //反之压缩图片\r\n          let reader = new FileReader();\r\n          // 将图片2将转成 base64 格式\r\n          reader.readAsDataURL(f[0]);\r\n          console.log(reader)\r\n          // 读取成功后的回调\r\n          reader.onloadend = function () {\r\n            let result = this.result;\r\n            let img = new Image();\r\n            img.src = result;\r\n            img.onload = function () {\r\n              let data = self.compress(img, Orientation);\r\n              self.headerImage = data;\r\n              ndata = self.compress(img, Orientation);\r\n              console.log('ndata值');\r\n              console.log(ndata);\r\n              //BASE64转图片\r\n              var arr = ndata.split(','),\r\n                mime = arr[0].match(/:(.*?);/)[1],\r\n                bstr = atob(arr[1]),\r\n                n = bstr.length,\r\n                u8arr = new Uint8Array(n);\r\n              while (n--) {\r\n                u8arr[n] = bstr.charCodeAt(n);\r\n              }\r\n              ndata = new File([u8arr], f[0].name, {\r\n                type: mime\r\n              })\r\n              console.log('6weeeee');\r\n              console.log(ndata);\r\n              self.postImg(ndata);\r\n            }\r\n          }\r\n        }\r\n      },\r\n      async postImg(ndata) {\r\n        let formdata1 = new FormData(); //创建form对象\r\n        console.log('9999999999');\r\n        console.log(ndata.size);\r\n        formdata1.append(\"img\", ndata); //通过append向form对象添加数据\r\n        // console.log(formUpload1);\r\n        this.uploadImg(formdata1);\r\n      },\r\n      compress(img, Orientation) {\r\n        let canvas = document.createElement(\"canvas\");\r\n        let ctx = canvas.getContext('2d');\r\n        //瓦片canvas\r\n        let tCanvas = document.createElement(\"canvas\");\r\n        let tctx = tCanvas.getContext(\"2d\");\r\n        let initSize = img.src.length;\r\n        let width = img.width;\r\n        let height = img.height;\r\n        //如果图片大于四百万像素，计算压缩比并将大小压至400万以下\r\n        let ratio;\r\n        if ((ratio = width * height / 4000000) > 1) {\r\n          console.log(\"大于400万像素\")\r\n          ratio = Math.sqrt(ratio);\r\n          width /= ratio;\r\n          height /= ratio;\r\n        } else {\r\n          ratio = 1;\r\n        }\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        // \t\t铺底色\r\n        ctx.fillStyle = \"#fff\";\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        //如果图片像素大于100万则使用瓦片绘制\r\n        let count;\r\n        if ((count = width * height / 1000000) > 1) {\r\n          console.log(\"超过100W像素\");\r\n          count = ~~(Math.sqrt(count) + 1); //计算要分成多少块瓦片\r\n          //            计算每块瓦片的宽和高\r\n          let nw = ~~(width / count);\r\n          let nh = ~~(height / count);\r\n          tCanvas.width = nw;\r\n          tCanvas.height = nh;\r\n          for (let i = 0; i < count; i++) {\r\n            for (let j = 0; j < count; j++) {\r\n              tctx.drawImage(img, i * nw * ratio, j * nh * ratio, nw * ratio, nh * ratio, 0, 0, nw, nh);\r\n              ctx.drawImage(tCanvas, i * nw, j * nh, nw, nh);\r\n            }\r\n          }\r\n        } else {\r\n          ctx.drawImage(img, 0, 0, width, height);\r\n        }\r\n        //进行最小压缩\r\n        let ndata = canvas.toDataURL('image/jpeg', 0.7);\r\n\r\n        console.log('压缩前：' + initSize);\r\n        console.log('压缩后：' + ndata.length);\r\n        console.log(\"ndata:\" + ndata)\r\n\r\n        console.log('压缩率：' + ~~(100 * (initSize - ndata.length) / initSize) + \"%\");\r\n        tCanvas.width = tCanvas.height = canvas.width = canvas.height = 0;\r\n        return ndata;\r\n      },\r\n      uploadImg(formdata) {\r\n        this.$axios\r\n          .post(this.$store.state.baseUrl + \"/imgrecv\", formdata)\r\n          .then(res => {\r\n            if (res.status == 200) {\r\n              this.$message.success({\r\n                message: \"图片上传成功\",\r\n                showClose: true,\r\n                duration: 2000\r\n              });\r\n            }\r\n            console.log(res);\r\n            console.log(\"上传图片结果\");\r\n            let imgurl = res.data.imgurl;\r\n            if (this.imgSrc.indexOf(imgurl) == -1) {\r\n              this.imgSrc.push(imgurl);\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            this.$message.error({\r\n              message: err.data.message,\r\n              showClose: true,\r\n              duration: 2000\r\n            });\r\n          });\r\n      },\r\n      // 删除图片\r\n      delImage(index) {\r\n        this.imgSrc.splice(index, 1);\r\n      },\r\n    }\r\n  }\r\n\r\n</script>\r\n<style lang=\"scss\">\r\n  .upload-imgs {\r\n    width: 100%;\r\n    margin-bottom: 10px;\r\n    position: relative;\r\n    display: flex;\r\n\r\n    .add {\r\n      width: 100px;\r\n      height: 100px;\r\n      position: relative;\r\n      border: 1px solid #ddd;\r\n      border-radius: 5px;\r\n      display: flex;\r\n\r\n      .addIcon {\r\n        width: 50px;\r\n        height: 50px;\r\n        position: absolute;\r\n        top: 45%;\r\n        left: 45%;\r\n        z-index: 1;\r\n      }\r\n\r\n      .inputUpload {\r\n        position: absolute;\r\n        display: block;\r\n        width: 100px;\r\n        height: 100px;\r\n        opacity: 0;\r\n        cursor: pointer;\r\n        z-index: 999;\r\n      }\r\n    }\r\n\r\n    .spanStyle {\r\n      width: 15px;\r\n      height: 15px;\r\n      text-align: center;\r\n      line-height: 0.7;\r\n      background-color: rgb(221, 221, 221);\r\n      color: rgb(255, 255, 255);\r\n      border: 1px solid rgb(221, 221, 221);\r\n      border-radius: 50%;\r\n      position: absolute;\r\n      top: 1px;\r\n      right: 1px;\r\n      z-index: 999;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .previewImg {\r\n      display: flex;\r\n      z-index: 1;\r\n    }\r\n  }\r\n\r\n  .previewImg2 {\r\n    display: flex;\r\n  }\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/views"}]}