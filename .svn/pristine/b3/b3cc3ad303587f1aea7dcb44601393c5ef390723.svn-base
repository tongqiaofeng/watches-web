{"remainingRequest":"D:\\aa-tong\\my-projects\\watches-three\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\watches-three\\src\\components\\purch\\My-purchase.vue?vue&type=template&id=79f80b25&scoped=true&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\watches-three\\src\\components\\purch\\My-purchase.vue","mtime":1597739304651},{"path":"D:\\aa-tong\\my-projects\\watches-three\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\watches-three\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\watches-three\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\watches-three\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}