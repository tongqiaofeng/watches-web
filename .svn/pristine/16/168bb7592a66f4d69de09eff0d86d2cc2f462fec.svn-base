{"remainingRequest":"D:\\aa-tong\\my-projects\\watches\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\watches\\src\\components\\views\\Record.vue?vue&type=style&index=0&id=720ee37c&lang=scss&scoped=true&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\watches\\src\\components\\views\\Record.vue","mtime":1597744381511},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmlucHV0LXN0eWxlIHsKICB3aWR0aDogNjAlICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["Record.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiUA;AACA;AACA","file":"Record.vue","sourceRoot":"src/components/views","sourcesContent":["<template>\r\n  <div>\r\n    <el-form label-width=\"120px\">\r\n      <el-form-item label=\"用户列表：\" required v-show=\"recordSelect !== 'company'\">\r\n        <el-select v-model=\"userId\" placeholder=\"请选择用户\" @change=\"changeNick\">\r\n          <el-option v-for=\"item of userList\" :key=\"item.id\" :label=\"item.nick\" :value=\"item.id\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item :label=\"recordSelect == 'transfer' ? '转账金额：' : '申请金额：'\" required>\r\n        <div style=\"width: 100%;\">\r\n          <el-input v-model=\"subMoney\" placeholder=\"请输入\" style=\"width: 30%;\"></el-input>\r\n          <el-select v-model=\"currency\" style=\"width: 30%;\" placeholder=\"请选择\">\r\n            <el-option v-for=\"(item,index) in currencyList\" :key=\"index\" :label=\"item\" :value=\"item\">\r\n            </el-option>\r\n          </el-select>\r\n        </div>\r\n      </el-form-item>\r\n      <el-form-item :label=\"recordSelect == 'transfer' ? '支出方式：' : '收款方式：'\" required>\r\n        <el-radio-group v-model=\"type\">\r\n          <el-radio label=\"银行卡\"></el-radio>\r\n          <el-radio label=\"现金\"></el-radio>\r\n        </el-radio-group>\r\n      </el-form-item>\r\n      <el-form-item label=\"银行卡号：\" required v-show=\"type !== '现金'\">\r\n        <div style=\"width: 100%;display: flex;\">\r\n          <el-autocomplete class=\"input-style\" v-model=\"bankAccount\" :fetch-suggestions=\"querySearch\"\r\n            :trigger-on-focus=\"false\" placeholder=\"可输入银行卡号进行查询\" @select=\"handleSelect\">\r\n          </el-autocomplete>\r\n          <div style=\"margin-top: 5px;\">\r\n            <el-tooltip class=\"item\" effect=\"light\" content=\"新增银行卡\" placement=\"top-end\">\r\n              <img src=\"../../assets/imgs/peer.png\" style=\"height: 35px;margin-left: 10px;cursor: pointer;\"\r\n                @click=\"addBank\" />\r\n            </el-tooltip>\r\n            <el-dialog title=\"新增银行卡\" :visible.sync=\"dialogAddBankVisible\" center :close-on-press-escape=\"false\"\r\n              :close-on-click-modal=\"false\">\r\n              <div>\r\n                <el-form label-width=\"130px\">\r\n                  <el-form-item label=\"银行卡名称：\" required>\r\n                    <el-autocomplete class=\"inline-input input-style\" v-model=\"bankName\"\r\n                      :fetch-suggestions=\"queryBankNameSearch\" placeholder=\"请输入内容\" @select=\"handleBankNameSelect\">\r\n                    </el-autocomplete>\r\n                  </el-form-item>\r\n                  <el-form-item label=\"银行卡卡号：\" required>\r\n                    <el-input v-model=\"bankAccount\" class=\"input-style\"></el-input>\r\n                  </el-form-item>\r\n                  <el-form-item label=\"备注：\">\r\n                    <el-input type=\"textarea\" v-model=\"remark\" class=\"input-style\"></el-input>\r\n                  </el-form-item>\r\n                </el-form>\r\n              </div>\r\n              <div slot=\"footer\">\r\n                <el-button @click=\"dialogAddBankVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"addBankSure\" v-preventClick>确 定</el-button>\r\n              </div>\r\n            </el-dialog>\r\n          </div>\r\n        </div>\r\n      </el-form-item>\r\n      <el-form-item label=\"申请原因：\" required>\r\n        <el-input type=\"textarea\" v-model=\"describe\" class=\"input-style\"></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n    <div class=\"submitButton\">\r\n      <el-button type=\"primary\" @click=\"borrowRecordAdd\" v-preventClick>申 请</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        url: this.$store.state.baseUrl,\r\n        countryList: [],\r\n        userList: [],\r\n        userId: '', // 用户\r\n        subMoney: '', // 申请金额\r\n        currency: '', // 币种\r\n        type: '银行卡',\r\n        bankList: [],\r\n        bankAccount: '',\r\n        bankId: 0,\r\n        dialogAddBankVisible: false,\r\n        bankNameList: [{\r\n          name: '工商银行'\r\n        }, {\r\n          name: '中国银行'\r\n        }, {\r\n          name: '建设银行'\r\n        }, {\r\n          name: '招商银行'\r\n        }, {\r\n          name: '交通银行'\r\n        }, {\r\n          name: '农业银行'\r\n        }, {\r\n          name: '汇丰银行'\r\n        }, {\r\n          name: '花旗银行'\r\n        }, {\r\n          name: '恒生银行'\r\n        }],\r\n        bankName: '', // 银行卡名称\r\n        bankAccount: '', // 卡号\r\n        remark: '', // 备注\r\n        describe: '',\r\n        params: {},\r\n      }\r\n    },\r\n    props: ['recordSelect'],\r\n    created() {\r\n      this.handleCountryGet();\r\n      this.handlebankCardList();\r\n      this.handleUserListInfo();\r\n    },\r\n    computed: {\r\n      currencyList() {\r\n        let list = [];\r\n        for (let item of this.countryList) {\r\n          if (list.indexOf(item.enCurrency) === -1) {\r\n            list.push(item.enCurrency);\r\n          }\r\n        };\r\n        console.log(list);\r\n        return list;\r\n      },\r\n    },\r\n    methods: {\r\n      changeNick() {\r\n        console.log(this.userId);\r\n      },\r\n      // 银行卡号选择\r\n      querySearch(queryString, cb) {\r\n        console.log(this.bankList);\r\n        let restaurants = this.bankList;\r\n        for (let items of restaurants) {\r\n          items.value = items.bankName + ' ' + items.bankAccount;\r\n          items.id = items.id;\r\n        }\r\n        let results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;\r\n        console.log(results);\r\n        // 调用 callback 返回建议列表的数据\r\n        cb(results);\r\n      },\r\n      createFilter(queryString) {\r\n        return (restaurant) => {\r\n          return (restaurant.bankAccount.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\r\n        };\r\n      },\r\n      handleSelect(item) {\r\n        console.log(item);\r\n        this.bankAccount = item.value;\r\n        this.bankId = item.id;\r\n        console.log(this.bankAccount);\r\n        console.log(this.bankId);\r\n      },\r\n      // 新增银行卡\r\n      addBank() {\r\n        this.bankName = '';\r\n        this.bankAccount = '';\r\n        this.remark = '';\r\n        this.dialogAddBankVisible = true;\r\n      },\r\n      // 银行卡名称选择\r\n      queryBankNameSearch(queryString, cb) {\r\n        console.log(this.bankNameList);\r\n        let restaurants = this.bankNameList;\r\n        for (let items of restaurants) {\r\n          items.value = items.name;\r\n        }\r\n        let results = queryString ? restaurants.filter(this.createBankNameFilter(queryString)) : restaurants;\r\n        console.log(results);\r\n        // 调用 callback 返回建议列表的数据\r\n        cb(results);\r\n      },\r\n      createBankNameFilter(queryString) {\r\n        return (restaurant) => {\r\n          return (restaurant.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\r\n        };\r\n      },\r\n      handleBankNameSelect(item) {\r\n        console.log(item);\r\n        this.bankName = item.value;\r\n      },\r\n      // 确定增加\r\n      addBankSure() {\r\n        if (this.bankName == '' || this.bankAccount == '') {\r\n          this.$message.error({\r\n            message: '数据不能为空，请检查数据填写',\r\n            showClose: true,\r\n            duration: 2000\r\n          })\r\n        } else {\r\n          this.$axios.post(this.url + '/bankCardSave?java', {\r\n            bankName: this.bankName,\r\n            bankAccount: this.bankAccount,\r\n            remark: this.remark\r\n          }).then(res => {\r\n            console.log('增加银行卡');\r\n            console.log(res);\r\n            this.bankAccount = res.data.bankName + ' ' + res.data.bankAccount;\r\n            this.bankId = res.data.id;\r\n            this.$message.success({\r\n              message: '新增银行卡成功',\r\n              showClose: true,\r\n              duration: 2000\r\n            });\r\n            this.dialogAddBankVisible = false;\r\n          }).catch(err => {\r\n            console.log(err);\r\n            this.$message.error({\r\n              message: err.data.message,\r\n              showClose: true,\r\n              duration: 2000\r\n            });\r\n            this.dialogAddBankVisible = false;\r\n          })\r\n        }\r\n      },\r\n      // 数据验证\r\n      borrowRecordAdd() {\r\n        if (this.type == '银行卡') {\r\n          if (this.subMoney == '' || this.currency == '' || this.bankAccount ==\r\n            '' || this.describe == '') {\r\n            this.$message.error({\r\n              message: '数据不能为空，请检查数据填写',\r\n              showClose: true,\r\n              duration: 2000\r\n            })\r\n            return 1;\r\n          };\r\n        } else {\r\n          if (this.subMoney == '' || this.currency == '' || this.describe ==\r\n            '') {\r\n            this.$message.error({\r\n              message: '数据不能为空，请检查数据填写',\r\n              showClose: true,\r\n              duration: 2000\r\n            })\r\n            return 1;\r\n          };\r\n        }\r\n        if (this.recordSelect == 'company') {\r\n          this.params = {\r\n            flag: 0,\r\n            userId: 0,\r\n            subMoney: this.subMoney,\r\n            currency: this.currency,\r\n            type: this.type == '银行卡' ? 0 : 1,\r\n            id: this.type == '银行卡' ? this.bankId : '',\r\n            describe: this.describe\r\n          }\r\n        } else {\r\n          this.params = {\r\n            flag: this.recordSelect == 'fellow' ? 0 : 1,\r\n            userId: this.userId,\r\n            subMoney: this.subMoney,\r\n            currency: this.currency,\r\n            type: this.type == '银行卡' ? 0 : 1,\r\n            id: this.type == '银行卡' ? this.bankId : '',\r\n            describe: this.describe\r\n          }\r\n        }\r\n        console.log(this.params);\r\n        this.verifyBorrow(this.params);\r\n      },\r\n      // 提交申请\r\n      verifyBorrow(params) {\r\n        this.$axios.post(this.url + '/borrowRecordAdd?java', params).then(res => {\r\n          console.log('增加借贷记录');\r\n          console.log(res);\r\n          this.$message.success({\r\n            message: '新增记录成功',\r\n            showClose: true,\r\n            duration: 2000\r\n          });\r\n          // this.myBorrowSelect.select = 0;\r\n        }).catch(err => {\r\n          console.log(err);\r\n          this.$message.error({\r\n            message: err.data.message,\r\n            showClose: true,\r\n            duration: 2000\r\n          });\r\n          // this.myBorrowSelect.select = 0;\r\n        })\r\n      },\r\n      // 获取币种列表\r\n      handleCountryGet() {\r\n        this.$axios.post(this.url + '/CountryGet').then((res) => {\r\n          console.log('国家列表');\r\n          console.log(res);\r\n          this.countryList = res.data;\r\n        })\r\n      },\r\n      // 获取银行卡列表\r\n      handlebankCardList() {\r\n        this.$axios.post(this.url + '/bankCardList?java').then(res => {\r\n          console.log('获取银行卡列表');\r\n          console.log(res);\r\n          this.bankList = res.data;\r\n        }).catch(err => {\r\n          console.log(err);\r\n        })\r\n      },\r\n      // 获取用户列表\r\n      handleUserListInfo() {\r\n        this.$axios.post(this.url + '/userListInfo?java').then(res => {\r\n          console.log('获取用户列表');\r\n          console.log(res);\r\n          this.userList = res.data;\r\n        }).catch(err => {\r\n          console.log(err);\r\n        })\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .input-style {\r\n    width: 60% !important;\r\n  }\r\n</style>"]}]}