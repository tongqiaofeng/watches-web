{"remainingRequest":"D:\\aa-tong\\my-projects\\watches\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\watches\\src\\components\\purch\\My-purchase.vue?vue&type=template&id=346d9dbc&scoped=true&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\watches\\src\\components\\purch\\My-purchase.vue","mtime":1595563491567},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}