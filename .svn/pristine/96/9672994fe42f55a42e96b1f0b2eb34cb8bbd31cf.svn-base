{"remainingRequest":"D:\\aa-tong\\my-projects\\watches\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\watches\\src\\components\\views\\Watch-query.vue?vue&type=template&id=4fe7cc4a&scoped=true&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\watches\\src\\components\\views\\Watch-query.vue","mtime":1589011969781},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\watches\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}