<template>
	<div class="warehouse-Reports" id="warehouse-Reports">
		<div class="reports-content" v-if="againclick.times == 0">
			<div class="reports-content1" v-if="this.wareFlag == 1">
				<!-- <div class="report-heade">
					<span class="heade-title">仓库报表</span>
				</div> -->
				<div class="report-form">
					<el-form id="report-input" ref="form" :label-position="labelPosition">
						<div class="report-input">
							<!-- 货源-->
							<el-form-item label="货源 :" style="width: 50%;">
								<el-select v-model="value1" filterable placeholder="请选择" style="width: 80%;" @change="userchange">
									<el-option v-for="item in sourceList" :key="item.id" :label="item.name" :value="item.id"
										style="width: 500px;" @click="userchange">
									</el-option>
								</el-select>
							</el-form-item>
							<!-- 仓库 -->
							<el-form-item label="仓库 :" style="width: 50%; " v-if="authorityList[32]==1">
								<el-select v-model="value2" filterable placeholder="请选择" style="width: 80%;" @change="housechange">
									<el-option v-for="item in warehouse" :key="item.id" :label="item.name" :value="item.id"
										style="width: 500px;" @click="housechange">
									</el-option>
								</el-select>
							</el-form-item>
						</div>
					</el-form>
				</div>
			</div>
			<div class="reports-content2">
				<div class="report-num">
					<div class="watch-nums">
						<div class="watch-sale">
							<p class="watch-nums-title">总库存 :</p>
							<p class="watch-nums-total">{{warehouseWatchTotal}}</p>
						</div>
						<el-popover class="watch-salenums" v-model="visible" placement="center"
							style="margin: 30px 30px 0px 0px;background-color: #fff;border-radius: 30px; display: flex;flex-wrap: nowrap;width: 500px;"
							trigger="click">
							<div v-for="(item,index) in radiobutton" :key="index">
								<el-radio v-model="radio" :key="item.value" :label="item.label" @change="onRadioChange(item.value)">
								</el-radio>
							</div>
							<div slot="reference" class="watch-salenums" style="cursor: pointer;">
								<p class="watch-nums-title">{{radio}}</p>
								<p class="watch-nums-total">{{warehousenum}}</p>
							</div>
						</el-popover>
						<div class="report-salenums">
							<p class="watch-nums-title">总采购金额 :</p>
							<p class="watch-nums-total">{{ formatNumberRgx(warehouseWatchmoney) + " " + "HKD" }}</p>
						</div>
					</div>
					<div class="report-screen">
						<div class="report-checked">
							<el-checkbox v-model="checked1" @change="notputinto" class="el-checkbox__label">待入库</el-checkbox>
							<el-checkbox v-model="checked2" @change="alreadyinto" class="el-checkbox__label">已入库</el-checkbox>
						</div>
						<div class="report-sort">
							<div class="time-sort" @click="timechange" style="cursor: pointer;">
								<span>时间 </span>
								<div class="caret" v-if="updownshow==true">
									<i class="el-icon-caret-top" v-if="dispalytype==1"></i><i class="el-icon-caret-bottom"
										v-if="dispalytype==2"></i>
								</div>
							</div>
							<div class="price-sort" @click="pricechange" style="cursor: pointer;">
								<span>采购价 </span>
								<div class="caret" v-if="updownshow==false">
									<i class="el-icon-caret-top" v-if="dispalytype2==1"></i><i class="el-icon-caret-bottom"
										v-if="dispalytype2==2"></i>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div v-if="list.length == 0" style="text-align: center;margin: 20px;" class="hintmsg">
					<p>{{ hintMsg }}</p>
				</div>
				<div class="report-watch" id="report-watch" v-else>
					<table>
						<tr class="table-tr">
							<th>图片</th>
							<th>采购价</th>
							<th>入库/采购信息</th>
							<th>查看详情</th>
						</tr>
						<tr v-for="(item,index) in list" :key="index" class="imgurlbox">
							<td>
								<img v-image-preview
									:src=" item.buyWatchPics == null || item.buyWatchPics == '' ? '' : img + '/img/watch/' + item.buyWatchPics.split('|')[0] "
									class="watch-img" />
							</td>
							<td>
								<p>{{ formatNumberRgx(item.buyWatchPriceHkd) + "  " + "HKD"}}</p>
							</td>
							<td v-if="item.stockInTime == null" style="text-align: left;">
								<div style="display: flex;">
									<span>购入时长 : </span>
									<span :class="isJump == 0 ? 'my-face' : ''"
										:style="{color:timefilter2(item.buyDate) > timetocolor ? 'red':'#2c3e50',fontSize: '18px'}">
										{{timefilter2(item.buyDate) }}{{" "+"天"}}</span>
								</div>
								<div>
									<span>采购时间 : </span>
									<span>{{item.buyDate}}</span>
								</div>
							</td>
							<td v-else style="text-align: left;">
								<div>
									<span>在库时长 : </span>
									<span :class="isJump == 0 ? 'my-face' : ''"
										:style="{color:timefilter2(item.stockInTime)  > timetocolor ? 'red':'#2c3e50',fontSize: '18px'}">{{timefilter2(item.stockInTime)}}{{" "+"天"}}</span>
								</div>
								<div>
									<span>入库时间 : </span>
									<span>{{String(item.stockInTime.split(" ").splice(0, 1))}}</span>
								</div>
							</td>
							<td class="salebox">
								<img style="cursor:pointer" src="../../assets/imgs/details.png" alt="" @click="details(item)"
									title="查看详情" />
							</td>
						</tr>
					</table>
					<div style="width: 100%;height: 50px;">
						<div style="margin:15px 0;position:absolute;right:6%;">
							<el-pagination @current-change="handleCurrentChange" :current-page="page"
								layout="total, prev, pager, next, jumper" :total="total">
							</el-pagination>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="chartbox" v-if="againclick.times == 3">
			<div class="returnlastpage" style="margin-top: 0; " @click="backto">
				<div>
					<img src="../../assets/imgs/goback.png" />
				</div>
				<span class="font">返回</span>
			</div>
			<div class="sale-content">
				<div class="message-heade">
					<div class="message-title">
						<div class="titlebox">
							<div class="title-line"></div>
							<span style="line-height: 28px;">订单详情</span>
						</div>
						<img src="../../assets/imgs/right.png" alt="">
					</div>
					<div class="message-purchase" @click="detailspage" style="cursor:pointer">
						<img src="../../assets/imgs/story.png" alt="" class="messagelogo">
						<span>采购单详情</span>
					</div>
				</div>
				<div class="message-content">
					<div class="message-title">
						<div class="titlebox">
							<div class="title-line"></div>
							<span style="line-height: 22px;">主要信息</span>
						</div>
						<img src="../../assets/imgs/right.png" alt="">
					</div>
					<div class="message-main">
						<div class="message-mainbox">
							<div style="display: flex;flex-wrap: nowrap;" class="mainbox-line">
								<span>品牌 ：</span><span>{{detailstitem.buyWatchBrand}}</span>
							</div>
							<div style="display: flex;flex-wrap: nowrap;" class="mainbox-line">
								<span>型号 ：</span><span>{{detailstitem.buyWatchModel}}</span>
							</div>
						</div>
						<div class="message-mainbox">
							<div style="display: flex;flex-wrap: nowrap;" class="mainbox-line">
								<span>采购员 ：</span><span>{{detailstitem.name}}</span>
							</div>
							<div style="display: flex;flex-wrap: nowrap;" class="mainbox-line">
								<span>采购价格 ：</span><span>{{formatNumberRgx(detailstitem.buyWatchPriceHkd)+" "+"HKD"}}</span>
							</div>
							<div style="display: flex;flex-wrap: nowrap;" class="mainbox-line">
								<span>采购时间 ：</span><span>{{detailstitem.buyDate}}</span></div>
							<div style="display: flex;flex-wrap: nowrap;" class="mainbox-line" v-if="detailstitem.stockInTime==null">
								<span>购入时长 ：</span><span>{{timefilter2(detailstitem.buyDate)}}{{" "+"天"}}</span></div>
						</div>
						<div class="message-mainbox" v-if="detailstitem.stockInTime!=null">
							<div style="display: flex;flex-wrap: nowrap;" class="mainbox-line">
								<span>仓库名称 ：</span><span>{{detailstitem.warehouseName}}</span>
							</div>
							<div style="display: flex;flex-wrap: nowrap;" class="mainbox-line">
								<span>入库时间 ：</span><span>{{detailstitem.stockInTime}}</span>
							</div>
							<div style="display: flex;flex-wrap: nowrap;" class="mainbox-line">
								<span>在库时长 ：</span><span>{{timefilter2(detailstitem.stockInTime)}}{{" "+"天"}}</span>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<!-- 采购报表详情 -->
		<Details :detailsSelect="detailsSelect" @backbuy="backbuy" v-if="againclick.times == 2">
		</Details>
	</div>
</template>
<script>
	export default {
		data() {
			return {
				hintMsg: "加载中",
				keyword: "",
				img: this.$store.state.baseUrl,
				warehouseId: 0,
				radio: '超3月库存',
				radiobutton: [{
					value: 1,
					label: "超1月库存",

				}, {
					value: 2,
					label: "超2月库存"

				}, {
					value: 3,
					label: "超3月库存",


				}, {
					value: 4,
					label: "超半年库存",

				}, {
					value: 5,
					label: "超一年库存",

				}],
				timetocolor: 90,
				userId: 0,
				sourceList: [],
				warehouse: [],
				warehouseWatch: [],
				warehouseWatchTotal: "",
				warehouseWatchmoney: "",
				houseList: [],
				value1: "",
				value2: "",
				labelPosition: "left",
				promptMessage: "可输入品牌、型号、采购员昵称、仓库名称搜索",
				checked1: true,
				checked2: true,
				detailsSelect: {
					id: 1,
					num: 0,
					buyCommState: 0,
				},
				detailstitem: "",
				total: 0,
				page: 1,
				pageNum: 10,
				list: [],
				listMsg: '数据加载中...',
				list2: [],
				nowdate: "",
				warehousenum: 0,
				visible: false,
				dispalytype: 1,
				dispalytype2: 1,
				num: 1,
				num2: 1,
				updownshow: true,
				timeOut: null,
				isJump: 1,
				wareFlag: 0,
			}
		},
		props: ["againclick"],
		created() {
			this.authorityList = sessionStorage.getItem("authority").split("|");
			if (this.authorityList[32] == 0) { //判断权限
				this.warehouseId = -1;
			}
			this.sourceWarehouseGet();
			this.warehouseWatchList();

		},
		methods: {
			timefilter2(bb) { // 过滤器------计算在库、采购时长  提升为函数
				if (bb.length > 11) {
					bb = String(bb.split(" ").splice(0, 1))
				}
				this.adddate()
				let aDate = bb.split("-")
				let oDate2 = new Date(aDate[0], aDate[1], aDate[2])
				return parseInt(Math.abs(this.oDate1 - oDate2) / 1000 / 60 / 60 / 24) //把相差的毫秒数转换为天数
			},
			// 获取仓库与货源数据
			sourceWarehouseGet() {
				this.$axios.post(this.$store.state.baseUrl + '/buyerSalesmanList', {
					type: 1
				}).then((res) => {
					console.log(res.data);
					this.wareFlag = res.data.flag;
					if (this.wareFlag == 1) {
						this.sourceList = res.data.purchaserList;
						console.log(this.sourceList);
						this.value1 = this.sourceList[0].name;
						this.$axios
							.post(this.$store.state.baseUrl + "/sourceWarehouseGet")
							.then((res) => {
								console.log(res.data);
								this.warehouse = res.data.warehouseList;

								if (this.authorityList[32] == 0) {
									this.value2 = ""
								} else {
									this.value2 = this.warehouse[0].name;
								}
							})
					};
				});

			},
			// 获取仓库手表列表数据
			warehouseWatchList() {
				this.$axios
					.post(this.$store.state.baseUrl + "/warehouseWatchList", {
						userId: this.wareFlag == 1 ? this.userId : 0,
						warehouseId: this.wareFlag == 1 ? this.warehouseId : -1,
						keyword: this.keyword,
					})
					.then((res) => {
						this.warehouseWatch = res.data;
						this.houseList = this.warehouseWatch.watchList;
						this.wareList(); //判断入库、排序条件
					})
			},

			/*  ---条件选择分割线--- */
			userchange(val) { //更改货源
				this.userId = val;
				this.warehouseWatchList();
			},
			housechange(val) { // 更改仓库
				this.warehouseId = val;
				this.warehouseWatchList();
			},
			// fuzzySearch() { //模糊查询
			//     console.log(this.keyword);
			//     this.warehouseWatchList()
			// },
			notputinto() { //复选框-- 未入库
				// console.log(this.checked1);
				this.wareList(); //不获取新数据，将原有数据进行入库判断
			},
			alreadyinto() { //复选框-- 已入库
				this.wareList();
			},
			timechange() { //时间升降序
				this.updownshow = true;
				this.updownchangetime();
			},
			pricechange() { //价格升降序
				this.updownshow = false;
				this.updownchangeprice()
			},
			/* ---- 条件选择分割线---- */

			// 入库--未入库手表列表
			wareList() {
				this.adddate(); //加载当前日期，库存时间的判断
				this.warehouseWatchmoney = 0;
				this.warehousenum = 0;
				this.houseList = this.warehouseWatch.watchList;
				if (this.checked1 == true && this.checked2 == true) { //判断入库条件
					// 全选
					this.list2 = [];
					this.list2 = this.warehouseWatch.watchList;
					this.warehouseWatchmoney = this.warehouseWatch.money;
				} else
				if (this.checked1 == true && this.checked2 == false) {
					// 未入库
					this.list2 = [];
					this.houseList.forEach((item) => {
						if (item.stockInTime == null) {
							this.list2.push(item)
							this.warehouseWatchmoney = item.buyWatchPriceHkd + this.warehouseWatchmoney
						}
					})
				} else if (this.checked1 == false && this.checked2 == true) {
					// 已入库;
					this.list2 = [];
					this.houseList.forEach((item) => {
						if (item.stockInTime !== null) {
							this.list2.push(item)
							this.warehouseWatchmoney = item.buyWatchPriceHkd + this.warehouseWatchmoney
						}
					})
				} else { //全不选
					this.list2 = [];
				}
				this.houseList = this.list2; //将筛选的值放入houseList
				console.log(this.houseList);
				this.total = this.houseList.length;
				this.warehouseWatchTotal = this.houseList.length;
				//计算总金额
				this.houseList.forEach((item) => {
					let aDate = (item.stockInTime == null ? item.buyDate : String(item.stockInTime).split(" ")[0]).split("-");
					let oDate2 = new Date(aDate[0], aDate[1], aDate[2])
					if (parseInt(Math.abs(this.oDate1 - oDate2) / 1000 / 60 / 60 / 24) >= this.timetocolor) {
						this.warehousenum++
					}
				})
				//判断排序方式
				if (this.updownshow == true) { //价格排序被点击
					if (this.dispalytype == 1) {
						this.num = 1;
					} else { //保证升降序和和之前一致
						this.num = 2
					}
					this.updownchangetime();
				} else { //价格排序未点击----默认时间排序
					if (this.dispalytype2 == 1) {
						this.num2 = 1
					} else {
						this.num2 = 2
					}
					this.updownchangeprice()
				}
			},
			// 时间排列
			updownchangetime() {
				console.log("时间升序");
				let atime, btime
				this.houseList.sort((a, b) => {
					atime = (a.stockInTime == null ? a.buyDate : a.stockInTime);
					btime = (b.stockInTime == null ? b.buyDate : b.stockInTime);
					let aTime = new Date(atime).getTime();
					let bTime = new Date(btime).getTime();
					if (this.num % 2 == 0) {
						this.dispalytype = 2;
						return bTime - aTime //日期降序
					} else {
						this.dispalytype = 1;
						return aTime - bTime //日期升序  默认
					}
				})
				this.page = 1;
				this.getList();
				this.num++;
			},
			// 采购排列
			updownchangeprice() {
				console.log("价格升序");
				this.houseList.sort((a, b) => {
					if (this.num2 % 2 != 0) {
						this.dispalytype2 = 1;
						return a.buyWatchPriceHkd - b.buyWatchPriceHkd //默认价格升序
					} else {
						this.dispalytype2 = 2;
						return b.buyWatchPriceHkd - a.buyWatchPriceHkd //价格降序
					}
				})
				this.page = 1;
				this.getList();
				this.num2++;
			},
			// 数据条数分页处理
			getList() {
				console.log('默认分页数据----10条/每页' + this.list.length);
				this.list = this.houseList.filter((item, index) =>
					index < this.page * this.pageNum && index >= this.pageNum * (this.page - 1)
				);
				if (this.list.length == 0) {
					this.hintMsg = "啊哦~ 暂无数据"
				}
				console.log(this.list);
			},
			// 分页
			handleCurrentChange(val) {
				console.log(`当前页: ${val}`);
				this.page = val;
				this.backTop(); //回到顶部
				this.getList();
			},
			// 点击查看详情跳转至页面1
			details(item) {
				this.againclick.times = 3;
				this.detailstitem = item;
				this.backTop();
				// 将采购单号存至本地——————详情页面2所需
				sessionStorage.setItem("buyId", item.buyId);
				console.log(this.detailstitem);
			},
			// 点击采购单详情跳转至页面2
			detailspage() {
				this.againclick.times = 2;
				this.backTop()
			},
			// 返回至查看详情页面1
			backbuy(val) {
				this.againclick.times = 3;
				this.detailsSelect.num = 0;
			},
			// 返回仓库报表首页
			backto() {
				this.againclick.times = 0;
			},
			//获取当前日期
			adddate() {
				let yy = new Date().getFullYear();
				let mm = new Date().getMonth() + 1;
				let dd = new Date().getDate();
				mm = mm < 10 ? "0" + mm : mm;
				dd = dd < 10 ? "0" + dd : dd;
				this.nowdate = yy + "-" + mm + "-" + dd;
				let aDate = this.nowdate.split("-")
				this.oDate1 = new Date(aDate[0], aDate[1], aDate[2]) //转换为12-18-2006格式  
			},
			// 根据库存时间筛选信息
			onRadioChange(val) {
				this.isJump = 0;
				this.visible = false; //点击后隐藏弹框
				if (val == 1) { //超一月
					this.timetocolor = 30;
				} else if (val == 2) { //超2月
					this.timetocolor = 60;
				} else if (val == 3) { //超3月
					this.timetocolor = 90;
				} else if (val == 4) { //超半年
					this.timetocolor = 183;
				} else if (val == 5) { //超一年
					this.timetocolor = 365;
				}
				this.warehousetime(this.timetocolor) //计算radio超时间库存的数量
				this.wareList(); //不刷新页面只改变数值显示
				console.log(document.getElementsByClassName('timeLong'));

				this.timeOut = setTimeout(() => {
					this.isJump = 1;
				}, 3000)
			},
			//库存时间计算
			warehousetime(time) {
				this.adddate();
				this.warehousenum = 0;
				this.warehouseWatch.watchList.forEach((item) => {
					let aDate = (item.stockInTime == null ? item.buyDate : String(item.stockInTime).split(" ")[0]).split("-");
					let oDate2 = new Date(aDate[0], aDate[1], aDate[2])
					if (parseInt(Math.abs(this.oDate1 - oDate2) / 1000 / 60 / 60 / 24) >= time) {
						this.warehousenum++; //超时间库存数量
					}
				})
			},
			// 页面回到顶部
			backTop() {
				let timer = null;
				cancelAnimationFrame(timer);
				timer = requestAnimationFrame(function fn() {
					var oTop = document.body.scrollTop || document.documentElement.scrollTop;
					if (oTop > 0) {
						document.body.scrollTop = document.documentElement.scrollTop = oTop - 100;
						timer = requestAnimationFrame(fn);
					} else {
						cancelAnimationFrame(timer);
					}
				});
			},
		},
		beforeDestroy() {
			clearTimeout(this.timeOut);
			this.timeOut = null;
		},
	}
</script>
<style scoped>
	.my-face {
		animation: my-face 10s infinite ease-in-out;
		color: #00f1ff;
		display: inline-block;
		margin: 0 5px;
	}

	@-webkit-keyframes my-face {

		2%,
		24%,
		80% {
			-webkit-transform: translate(0, 1.5px) rotate(1.5deg);
			transform: translate(0, 1.5px) rotate(1.5deg)
		}

		4%,
		68%,
		98% {
			-webkit-transform: translate(0, -1.5px) rotate(-.5deg);
			transform: translate(0, -1.5px) rotate(-.5deg)
		}

		38%,
		6% {
			-webkit-transform: translate(0, 1.5px) rotate(-1.5deg);
			transform: translate(0, 1.5px) rotate(-1.5deg)
		}

		8%,
		86% {
			-webkit-transform: translate(0, -1.5px) rotate(-1.5deg);
			transform: translate(0, -1.5px) rotate(-1.5deg)
		}

		10%,
		72% {
			-webkit-transform: translate(0, 2.5px) rotate(1.5deg);
			transform: translate(0, 2.5px) rotate(1.5deg)
		}

		12%,
		64%,
		78%,
		96% {
			-webkit-transform: translate(0, -.5px) rotate(1.5deg);
			transform: translate(0, -.5px) rotate(1.5deg)
		}

		14%,
		54% {
			-webkit-transform: translate(0, -1.5px) rotate(1.5deg);
			transform: translate(0, -1.5px) rotate(1.5deg)
		}

		16% {
			-webkit-transform: translate(0, -.5px) rotate(-1.5deg);
			transform: translate(0, -.5px) rotate(-1.5deg)
		}

		18%,
		22% {
			-webkit-transform: translate(0, .5px) rotate(-1.5deg);
			transform: translate(0, .5px) rotate(-1.5deg)
		}

		20%,
		36%,
		46% {
			-webkit-transform: translate(0, -1.5px) rotate(2.5deg);
			transform: translate(0, -1.5px) rotate(2.5deg)
		}

		26%,
		50% {
			-webkit-transform: translate(0, .5px) rotate(.5deg);
			transform: translate(0, .5px) rotate(.5deg)
		}

		28% {
			-webkit-transform: translate(0, .5px) rotate(1.5deg);
			transform: translate(0, .5px) rotate(1.5deg)
		}

		30%,
		40%,
		62%,
		76%,
		88% {
			-webkit-transform: translate(0, -.5px) rotate(2.5deg);
			transform: translate(0, -.5px) rotate(2.5deg)
		}

		32%,
		34%,
		66% {
			-webkit-transform: translate(0, 1.5px) rotate(-.5deg);
			transform: translate(0, 1.5px) rotate(-.5deg)
		}

		42% {
			-webkit-transform: translate(0, 2.5px) rotate(-1.5deg);
			transform: translate(0, 2.5px) rotate(-1.5deg)
		}

		44%,
		70% {
			-webkit-transform: translate(0, 1.5px) rotate(.5deg);
			transform: translate(0, 1.5px) rotate(.5deg)
		}

		48%,
		74%,
		82% {
			-webkit-transform: translate(0, -.5px) rotate(.5deg);
			transform: translate(0, -.5px) rotate(.5deg)
		}

		52%,
		56%,
		60% {
			-webkit-transform: translate(0, 2.5px) rotate(2.5deg);
			transform: translate(0, 2.5px) rotate(2.5deg)
		}

		58% {
			-webkit-transform: translate(0, .5px) rotate(2.5deg);
			transform: translate(0, .5px) rotate(2.5deg)
		}

		84% {
			-webkit-transform: translate(0, 1.5px) rotate(2.5deg);
			transform: translate(0, 1.5px) rotate(2.5deg)
		}

		90% {
			-webkit-transform: translate(0, 2.5px) rotate(-.5deg);
			transform: translate(0, 2.5px) rotate(-.5deg)
		}

		92% {
			-webkit-transform: translate(0, .5px) rotate(-.5deg);
			transform: translate(0, .5px) rotate(-.5deg)
		}

		94% {
			-webkit-transform: translate(0, 2.5px) rotate(.5deg);
			transform: translate(0, 2.5px) rotate(.5deg)
		}

		0%,
		100% {
			-webkit-transform: translate(0, 0) rotate(0);
			transform: translate(0, 0) rotate(0)
		}
	}

	@keyframes my-face {

		2%,
		24%,
		80% {
			-webkit-transform: translate(0, 1.5px) rotate(1.5deg);
			transform: translate(0, 1.5px) rotate(1.5deg)
		}

		4%,
		68%,
		98% {
			-webkit-transform: translate(0, -1.5px) rotate(-.5deg);
			transform: translate(0, -1.5px) rotate(-.5deg)
		}

		38%,
		6% {
			-webkit-transform: translate(0, 1.5px) rotate(-1.5deg);
			transform: translate(0, 1.5px) rotate(-1.5deg)
		}

		8%,
		86% {
			-webkit-transform: translate(0, -1.5px) rotate(-1.5deg);
			transform: translate(0, -1.5px) rotate(-1.5deg)
		}

		10%,
		72% {
			-webkit-transform: translate(0, 2.5px) rotate(1.5deg);
			transform: translate(0, 2.5px) rotate(1.5deg)
		}

		12%,
		64%,
		78%,
		96% {
			-webkit-transform: translate(0, -.5px) rotate(1.5deg);
			transform: translate(0, -.5px) rotate(1.5deg)
		}

		14%,
		54% {
			-webkit-transform: translate(0, -1.5px) rotate(1.5deg);
			transform: translate(0, -1.5px) rotate(1.5deg)
		}

		16% {
			-webkit-transform: translate(0, -.5px) rotate(-1.5deg);
			transform: translate(0, -.5px) rotate(-1.5deg)
		}

		18%,
		22% {
			-webkit-transform: translate(0, .5px) rotate(-1.5deg);
			transform: translate(0, .5px) rotate(-1.5deg)
		}

		20%,
		36%,
		46% {
			-webkit-transform: translate(0, -1.5px) rotate(2.5deg);
			transform: translate(0, -1.5px) rotate(2.5deg)
		}

		26%,
		50% {
			-webkit-transform: translate(0, .5px) rotate(.5deg);
			transform: translate(0, .5px) rotate(.5deg)
		}

		28% {
			-webkit-transform: translate(0, .5px) rotate(1.5deg);
			transform: translate(0, .5px) rotate(1.5deg)
		}

		30%,
		40%,
		62%,
		76%,
		88% {
			-webkit-transform: translate(0, -.5px) rotate(2.5deg);
			transform: translate(0, -.5px) rotate(2.5deg)
		}

		32%,
		34%,
		66% {
			-webkit-transform: translate(0, 1.5px) rotate(-.5deg);
			transform: translate(0, 1.5px) rotate(-.5deg)
		}

		42% {
			-webkit-transform: translate(0, 2.5px) rotate(-1.5deg);
			transform: translate(0, 2.5px) rotate(-1.5deg)
		}

		44%,
		70% {
			-webkit-transform: translate(0, 1.5px) rotate(.5deg);
			transform: translate(0, 1.5px) rotate(.5deg)
		}

		48%,
		74%,
		82% {
			-webkit-transform: translate(0, -.5px) rotate(.5deg);
			transform: translate(0, -.5px) rotate(.5deg)
		}

		52%,
		56%,
		60% {
			-webkit-transform: translate(0, 2.5px) rotate(2.5deg);
			transform: translate(0, 2.5px) rotate(2.5deg)
		}

		58% {
			-webkit-transform: translate(0, .5px) rotate(2.5deg);
			transform: translate(0, .5px) rotate(2.5deg)
		}

		84% {
			-webkit-transform: translate(0, 1.5px) rotate(2.5deg);
			transform: translate(0, 1.5px) rotate(2.5deg)
		}

		90% {
			-webkit-transform: translate(0, 2.5px) rotate(-.5deg);
			transform: translate(0, 2.5px) rotate(-.5deg)
		}

		92% {
			-webkit-transform: translate(0, .5px) rotate(-.5deg);
			transform: translate(0, .5px) rotate(-.5deg)
		}

		94% {
			-webkit-transform: translate(0, 2.5px) rotate(.5deg);
			transform: translate(0, 2.5px) rotate(.5deg)
		}

		0%,
		100% {
			-webkit-transform: translate(0, 0) rotate(0);
			transform: translate(0, 0) rotate(0)
		}
	}

	.warehouse-Reports {
		width: 100%;
	}

	.reports-content {
		width: 96%;
		margin: 0 auto;
		font-size: 16px;
		border-radius: 30px;
		font-family: "微软雅黑";
	}

	.reports-content1 {
		width: 98%;
		padding-top: 20px;
		margin: 0px auto 20px;
		background-color: #fff;
		border-radius: 30px;
	}

	.reports-content2 {
		width: 98%;
		margin: 0px auto 20px;
	}

	.report-heade {
		display: flex;
		justify-content: space-between;
		flex-wrap: nowrap;
		padding: 30px;
		color: #2c3e50;
	}

	.heade-title {
		font-size: 18px;
		font-weight: bold;
	}

	.chartbox {
		width: 48%;
		margin: 0 72px;
		border-radius: 30px;
		background-color: #fff;
	}

	.report-form {
		width: 100%;
		margin: 0 30px;
		/* background-color: #d7ebe7; */
	}

	.report-input {
		width: 100%;
		/* height: 80px; */
		display: block;
		display: flex;
		align-items: center;
		margin-bottom: 10px;
	}

	.top-search-button {
		width: 80px;
		height: 40px;
		line-height: 40px;
		background-color: #0c7063;
		color: #fff;
		outline: none;
		border: none;
		border-radius: 30px;
		cursor: pointer;
	}

	.report-checked {
		width: 36%;
		display: flex;
		justify-content: space-between;
		color: #000;
	}

	.el-checkbox__label {
		font-size: 16px;
		font-weight: bold;
		color: #2c3e50;
	}

	.report-num {
		margin: 30px auto 20px;
	}

	.watch-nums {
		display: flex;
		flex-wrap: nowrap;
		justify-content: space-around;
	}

	.watch-nums-title {
		font-size: 18px;
		font-weight: bold;
		color: #2c3e50;
		margin: 20px 0 20px 30px;
	}

	.watch-nums-total {
		color: #2c3e50;
		font-size: 26px;
		font-weight: bold;
		margin: 20px 0 20px 30px;
	}

	.watch-sale {
		margin: 30px 30px 0px 0px;
		background-color: #fff;
		border-radius: 30px;
		width: 500px;
	}

	.report-salenums {
		margin: 30px 0px 0px 0px;
		background-color: #fff;
		border-radius: 30px;
		width: 500px;
	}

	.report-salenums {
		margin-left: 0px;
	}

	#report-watch table>tr {
		text-align: center;
	}

	.table-tr {
		height: 40px;
		line-height: 40px;
		border-bottom: 0;
	}

	#report-watch table>tr>td {
		background-color: #f3fbf9;
		border-bottom: 1px solid #d7ebe7;
		padding: 20px;
		width: 16%;
	}

	.watch-img {
		width: 100px;
		height: 100px;
		border-radius: 30px;
		-o-object-fit: cover;
		object-fit: cover;
	}

	.report-screen {
		display: flex;
		flex-wrap: nowrap;
		justify-content: space-between;
		width: 90%;
		margin: 20px auto;
	}

	.report-sort {
		display: flex;
		flex-wrap: nowrap;
		justify-content: space-between;
		width: 36%;
	}

	.time-sort,
	.price-sort {
		display: flex;
		flex-wrap: nowrap;
		justify-content: space-around;
		font-weight: 16px;
		font-weight: bold;
	}

	.el-icon-d-caret {
		line-height: 22px;
		margin-left: 16px;
	}

	.returnlastpage {
		width: 75px;
		height: 45px;
		margin: 23px;
		line-height: 45px;
		padding-top: 18px;
		display: flex;
		justify-content: space-between;
		cursor: pointer;
	}

	.returnlastpage img {
		width: 30px;
		height: 25px;
	}

	.returnlastpage div {
		margin-top: 5px;
	}

	.sale-content {
		width: 95%;
		margin: 0 auto;
		font-size: 16px;
		border-radius: 30px;
	}

	.message-heade,
	.message-content {
		width: 96%;
		margin: auto;
		margin-bottom: 20px;
	}

	.titlebox {
		display: flex;
		flex-wrap: nowrap;
	}

	.title-line {
		width: 4px;
		height: 22px;
		background-color: orange;
		margin: 0 10px;
	}

	.message-title {
		display: flex;
		flex-wrap: nowrap;
		justify-content: space-between;
		height: 28px;
		line-height: 28px;
		/* width: 98%;
        margin: auto; */
	}

	.message-title img {
		width: 22px;
		height: 22px;
	}

	.message-purchase {
		margin: 0 26px;
		height: 30px;
		line-height: 30px;
	}

	.messagelogo {
		width: 20px;
		height: 20px;
		margin-right: 10px;
		vertical-align: middle;
	}

	.salebox {
		position: relative;
	}

	.saletime {
		position: absolute;
		bottom: 10px;
		right: 18px;
		color: #2c3e50;
		font-size: 12px;
	}

	.message-main {
		width: 96%;
		margin: auto;
		padding-bottom: 20px;
	}

	.message-mainbox {
		margin: 20px;
	}

	.mainbox-line {
		margin: 6px;
	}

	.hintmsg {
		background-color: #fff;
		border-radius: 30px;
		height: 100px;
		margin: auto;
	}

	.hintmsg>p {
		margin: auto;
		line-height: 100px;
	}
</style>