<template>
  <div class="rate-query-container">
    <!-- <h3>汇率查询页面</h3> -->
    <div class="rate-query" v-if="rateQuerySel.select == 0">
      <div class="goback" v-if="page == 1">
        <div class="back-img" @click="gobackList2">
          <div>
            <img src="../../assets/imgs/goback.png" />
          </div>
          <span class="font">返回</span>
        </div>
      </div>

      <div class="rate-query-top">
        <div>
          <span>日期：</span>
          <el-date-picker v-model="time" type="date" style="width:230px" @change="dateChange" value-format="yyyy-MM-dd">
          </el-date-picker>
        </div>
        <div v-show="rateAuthority[9] == 1" style="display: flex;cursor: pointer;" @click="rateCalc">
          <img src="../../assets/imgs/calc.png" style="height: 45px;" />
        </div>
        <el-dialog title="价格计算器" :visible.sync="dialogCalcVisible" center :close-on-press-escape="false"
          :close-on-click-modal="false">
          <div class="rate-calc">
            <div class="calc-top">
              <div>
                <el-date-picker v-model="calcTime" type="date" style="width: 50%;" @change="dateChange2"
                  value-format="yyyy-MM-dd">
                </el-date-picker>
                <el-button type="primary" @click="handleRateCalcResult" class="calc-button">计算</el-button>
              </div>
              <p style="width: 40%;margin: 20px auto;text-align: left;">
                <span>{{ 1 + " " + selectCurrency + " = " }}</span>
                <span>{{ selectRate + " CNY" }}</span>
              </p>
              <p style="width: 40%;margin: 0 auto;text-align: left;">
                <span>{{ 1 + " CNY" + " = " }}</span>
                <span>{{ selectHKD + " HKD" }}</span>
              </p>
            </div>
            <div class="calc-center">
              <h4 style="margin-bottom: 0;">结果：</h4>
              <div>
                <div style="display: flex;">
                  <p style="width: 130px;margin-top: 0;text-align: right;">
                    税后价格：
                  </p>
                  <span>{{ VATInc }}</span>
                </div>
                <div style="display: flex;">
                  <p style="width: 130px;margin-top: 0;text-align: right;">
                    最终人民币：
                  </p>
                  <span>{{ CNYFinal }}</span>
                </div>
                <div style="display: flex;">
                  <p style="width: 130px;margin-top: 0;text-align: right;">
                    最终港币：
                  </p>
                  <span>{{ HKDFinal }}</span>
                </div>
              </div>
            </div>
            <div class="calc-bottom">
              <el-form label-width="100px">
                <el-form-item label="地区：">
                  <div style="display: flex;">
                    <el-select class="input-style" v-model="country" @change="countryChange">
                      <el-option v-for="(item, index) in countryList" :key="index" :label="item.cnName"
                        :value="item.cnName">
                      </el-option>
                    </el-select>
                    <div style="margin-top: 10px;margin-left: 5px;">
                      <img src="../../assets/imgs/position.png" style="width: 25px;height: 25px;cursor: pointer;"
                        @click="countryPosition" />
                    </div>
                  </div>
                </el-form-item>
                <el-form-item label="价格：">
                  <el-input v-model="price" class="input-style" placeholder="请输入">
                    <i slot="suffix" style="color: #000;margin-right:5%;font-style:normal;">{{ selectCurrency }}</i>
                  </el-input>
                </el-form-item>
              </el-form>
              <el-form :inline="true" label-width="100px">
                <el-form-item label="退税：">
                  <el-radio-group v-model="rateSymbol">
                    <el-radio label="x"></el-radio>
                    <el-radio label="÷"></el-radio>
                  </el-radio-group>
                </el-form-item>
                <el-form-item label="">
                  <el-input v-model="rateNum" placeholder="请输入" class="input-style"></el-input>
                </el-form-item>
              </el-form>
              <el-form label-width="100px">
                <el-form-item label="退税折损：">
                  <el-input v-model="breakage" class="input-style">
                    <i slot="suffix" style="color: #000;margin-right:5%;font-style:normal;">%</i>
                  </el-input>
                </el-form-item>
                <el-form-item label="折扣：">
                  <el-input v-model="discount" class="input-style">
                    <i slot="suffix" style="color: #000;margin-right:5%;font-style:normal;">个点</i>
                  </el-input>
                </el-form-item>
              </el-form>
            </div>
          </div>
          <div slot="footer">
            <el-button @click="dialogCalcVisible = false">取 消</el-button>
            <el-button type="primary" @click="dialogCalcVisible = false">确 定</el-button>
          </div>
        </el-dialog>
      </div>
      <div>
        <div v-show="dataRateList.length !== 0">
          <p>
            银行汇率：<span>{{ time1 }}</span>
          </p>
          <div class="rate-query-center">
            <table>
              <tr>
                <th>币种</th>
                <th>汇率</th>
                <th>操作</th>
              </tr>
              <tr v-for="(rate, index) in dataRateList" :key="index">
                <td v-show="rate.type == 0">
                  {{ rate.currencyCn + " " + rate.currencyEn }}
                </td>
                <td v-show="rate.type == 0">
                  <span>{{ rate.rate }}</span>
                  <img v-show="rate.change !== 0" :src="rate.change == 1 ? img1 : img2"
                    style="width: 20px;height: 20px;vertical-align:bottom" />
                </td>
                <td v-show="rate.type == 0">
                  <el-tooltip class="item" effect="light" content="查看汇率变化曲线图" placement="top-end">
                    <img :src="
                        rate.change == 1
                          ? upImg
                          : rate.change == -1
                          ? downImg
                          : noImg
                      " style="cursor:pointer;" @click="rateLine(rate.type, rate.currencyEn)" />
                  </el-tooltip>
                </td>
              </tr>
            </table>
          </div>
          <div>
            钱庄汇率：<span>{{ time2 }}</span>
            <div style="display: inline-block;cursor: pointer;" @click="rateChange">
              <img src="../../assets/imgs/update.png" v-if="rateAuthority[8] == 1"
                style="vertical-align: bottom; margin-left: 8px;" />
              <span style="color: #c0c0c0;font-size: 12px;">修改</span>
            </div>
          </div>
          <div class="rate-query-center">
            <table>
              <tr>
                <th>货币</th>
                <th>汇率</th>
                <th>操作</th>
              </tr>
              <tr v-for="(rate, index) in dataRateList" :key="index">
                <td v-if="rate.type == 2">
                  {{ rate.currencyCn + " -> " + "人民币" }}
                </td>
                <td v-if="rate.type == 2">
                  <div style="display: flex;justify-content: center;">
                    <div style="display: flex;justify-content: center;">
                      <input type="text" v-model="rate.rate" class="freight-input" readonly unselectable="on" />
                    </div>
                    <div style="margin-top: 10px;">
                      <img v-show="rate.change !== 0" :src="rate.change == 1 ? img1 : img2"
                        style="width: 25px;height: 25px;margin-left: 5px;" />
                    </div>
                  </div>
                </td>
                <td v-if="rate.type == 2">
                  <el-tooltip class="item" effect="light" content="查看汇率变化曲线图" placement="top-end">
                    <img :src="
                        rate.change == 1
                          ? upImg
                          : rate.change == -1
                          ? downImg
                          : noImg
                      " style="cursor:pointer;" @click="rateLine(rate.type, rate.currencyEn)" />
                  </el-tooltip>
                </td>
              </tr>
            </table>
          </div>
          <p>现钞汇率</p>
          <div class="rate-query-center">
            <table>
              <tr>
                <th>货币</th>
                <th>买入价</th>
                <th>卖出价</th>
                <th>操作</th>
              </tr>
              <tr v-for="(rate, index) in dataRateList" :key="index">
                <td v-show="rate.currencyCn !== '港币' && rate.type == 0">
                  {{ rate.currencyCn + " -> " + "港币" }}
                </td>
                <td v-show="rate.currencyCn !== '港币' && rate.type == 0">
                  <span>{{ (rate.rate / moneyShopRate).toFixed(5) }}</span>
                </td>
                <td v-show="rate.currencyCn !== '港币' && rate.type == 0">
                  <span>{{
                    Number(rate.rate / moneyShopRate + 0.003).toFixed(5)
                  }}</span>
                </td>
                <td v-show="rate.currencyCn !== '港币' && rate.type == 0">
                  <el-tooltip class="item" effect="light" content="查看汇率变化曲线图" placement="top-end">
                    <img src="../../assets/imgs/line.png" style="cursor:pointer;"
                      @click="rateLineOof(rate.currencyEn)" />
                  </el-tooltip>
                </td>
              </tr>
            </table>
          </div>
        </div>
      </div>
    </div>
    <div v-if="rateQuerySel.select == 2" class="ratesave">
      <div class="goback">
        <div class="back-img" @click="gobackList">
          <div>
            <img src="../../assets/imgs/goback.png" />
          </div>
          <span class="font">返回</span>
        </div>
      </div>
      <div class="timeandratesave">
        <div class="timeandrate">
          <div>
            <div style="margin-top: 6px;">
              <span>日期：</span>
              <el-date-picker v-model="time" type="date" style="width:540px" @change="dateChange3"
                value-format="yyyy-MM-dd">
              </el-date-picker>
            </div>
            <div style="margin-top: 30px;">
              <span>钱庄汇率*</span>
              <input type="text" v-model="timerate" class="rate-input"
                :readonly="rateAuthority[8] == 1 ? false : true" />
            </div>
          </div>
        </div>
      </div>
      <div style="width: 144px;margin: auto;">
        <button class="savebutton" @click="tosave">保存</button>
      </div>
    </div>
    <div v-if="rateQuerySel.select == 1">
      <div class="goback">
        <div class="back-img" @click="gobackList">
          <div>
            <img src="../../assets/imgs/goback.png" />
          </div>
          <span class="font">返回</span>
        </div>
      </div>
      <div id="myChart" style="width: 95%;height: 500px;margin: 0 auto;margin-top: 50px;"></div>
      <table style="width: 86%;margin: auto;">
        <tr>
          <th>汇率日期</th>
          <th v-if="isshowtabel == 1">汇率</th>
          <th v-if="isshowtabel == 2">买入价</th>
          <th v-if="isshowtabel == 2">卖出价</th>
        </tr>
        <tr v-if="isshowtabel == 1" v-for="(item, index) in dataRateHistoryreverse" :key="index" style="height: 48px;">
          <td>{{ item.time }}</td>
          <td>{{ item.rate }}</td>
        </tr>
        <tr v-if="isshowtabel == 2" v-for="(item, index) in moneyShopHistoryreverse" :key="index" style="height: 48px;">
          <td>{{ item.time }}</td>
          <td>{{ Number(item.bankRate / item.underBankRate).toFixed(5) }}</td>
          <td>
            {{
              Number(
                Number(item.bankRate / item.underBankRate) + 0.003
              ).toFixed(5)
            }}
          </td>
        </tr>
      </table>
    </div>
  </div>
</template>
<script>
    export default {
        data() {
            return {
                img1: require("../../assets/imgs/upPrice.png"),
                img2: require("../../assets/imgs/downPrice.png"),
                upImg: require("../../assets/imgs/up-line.png"),
                noImg: require("../../assets/imgs/line.png"),
                downImg: require("../../assets/imgs/down-line.png"),
                time: "",
                dataRateList: [],
                moneyShopHistoryreverse: [],
                dataRateHistoryList: [],
                dataRateHistoryreverse: [],
                xList: [],
                yList: [],
                yList2: [],
                updateRate: 0,
                moneyShopRate: 0,
                dialogCalcVisible: false,
                calcRateList: [],
                calcTime: "",
                selectCurrency: "",
                selectRate: "",
                selectHKD: "",
                VATInc: "", // 税后价格
                CNYFinal: "", // 最终人民币
                HKDFinal: "", // 最终港币
                countryList: [],
                country: "", // 国家
                price: "", // 价格
                rateSymbol: "", // 退税运算符号
                rateNum: "", // 退税数值
                breakage: 10, // 退税折损
                discount: 0, // 折扣

                time1: "",
                time2: "",
                moneyShopHistory: [],
                rateAuthority: [],
                isshowtabel: "",
                timerate: "",
                page: 0,
                selectval: "",
                tosavetime: 0,
            };
        },
        props: ["rateQuerySel"],
        created() {
            this.role = sessionStorage.getItem("role");
            this.rateAuthority = sessionStorage.getItem("authority").split("|");
            this.handleCountryGet();
            this.addtate();
            if (this.rateQuerySel.time != "") {
                this.selectval = this.rateQuerySel.val;
                this.time = this.rateQuerySel.time;
                this.page = this.rateQuerySel.page;
                console.log(this.page);
                this.handleDataRatesGet();
            } else {
                // this.page = this.rateQuerySel.page;
                this.handleDataRatesGet();
            }
        },
        methods: {
            // 时间查询汇率
            handleDataRatesGet() {
                console.log(this.time);
                this.dataRateList = [];
                this.$axios
                    .post(this.$store.state.baseUrl + "/DataRatesGet?java", {
                        time: this.time,
                    })
                    .then((res) => {
                        console.log("时间查询汇率");
                        console.log(res);
                        // this.time = res.data.time;
                        this.dataRateList = res.data;
                        for (let item of this.dataRateList) {
                            if (item.type === 2) {
                                this.moneyShopRate = item.rate;
                                // this.timerate = item.rate;
                                this.time2 = item.time;
                                if (this.time !== "") {
                                    if (item.time !== this.time) {
                                        this.$message.warning({
                                            message: "此日期汇率数据不完整，已为您展示最近完整数据",
                                            showClose: true,
                                            duration: 3000,
                                        });
                                    }
                                }
                            } else if (item.type === 0) {
                                this.time1 = item.time;
                            }
                        }
                        console.log(this.moneyShopRate);
                    })
                    .catch((err) => {
                        console.log(err);
                    });
            },
            // 汇率查询
            dateChange() {
                this.dataRateList = [];
                this.handleDataRatesGet();
            },
            // 汇率查询---新页面
            dateChange3() {
                this.RatesGet();
            },
            RatesGet() {
                console.log(this.time);
                // this.dataRateList = [];
                this.$axios
                    .post(this.$store.state.baseUrl + "/RateGet?java", {
                        time: this.time,
                        source: "CNY",
                        dest: "HKD",
                    })
                    .then((res) => {
                        console.log("时间查询汇率");
                        this.RatesGetlist = res.data;
                        console.log(this.RatesGetlist);
                        let rateee;
                        let result = this.RatesGetlist.some((item) => {
                            if (item.type == 2) {
                                rateee = item.rate;
                                return true
                            }
                        })
                        console.log(result);
                        if (result) {
                            this.timerate = rateee;
                        } else {
                            this.$message.warning({
                                message: "当前日期暂时没有汇率",
                                showClose: true,
                                duration: 3000,
                            });
                            this.timerate = "";
                        }
                        console.log(this.timerate);
                    });
            },
            //跳转至修改汇率页面
            rateChange() {
                this.tosavetime = 0;
                sessionStorage.setItem("oldtime", this.time);
                this.RatesGet();
                this.rateQuerySel.select = 2;
                this.backTop();
            },
            //保存按钮
            tosave() {
                this.rateQuerySel.select = 0;
                console.log(this.timerate);
                console.log(this.moneyShopRate);
                if (this.timerate != "") {
                    console.log("不为空");
                    this.rateInputChange(this.timerate);
                    this.$message.success({
                        message: "汇率修改成功",
                        showClose: true,
                        duration: 2000,
                    });
                    this.tosavetime = 1;
                } else {
                    console.log("weikong");
                    this.rateQuerySel.select = 2;
                    this.$message.warning({
                        message: "请添加汇率",
                        showClose: true,
                        duration: 3000,
                    });
                }
            },
            // 确定修改钱庄汇率
            rateInputChange(rate) {
                console.log(this.time + "----" + this.updateRate);
                this.$axios
                    .post(this.$store.state.baseUrl + "/DataRateSave?java", {
                        time: this.time,
                        rate: rate,
                    })
                    .then((res) => {
                        console.log("修改钱庄汇率");
                        console.log(res);
                        this.$message.success({
                            message: "汇率修改成功",
                            showClose: true,
                            duration: 2000,
                        });
                        this.handleDataRatesGet();
                        (function smoothscroll() {
                            var currentScroll =
                                document.documentElement.scrollTop || document.body.scrollTop;
                            if (currentScroll > 0) {
                                window.requestAnimationFrame(smoothscroll);
                                window.scrollTo(0, currentScroll - currentScroll / 5);
                            }
                        })();
                    })
                    .catch((err) => {
                        console.log(err);
                    });
            },
            // 币种历史汇率
            rateLine(type, currency) {
                console.log(type, currency);
                this.dataRateHistoryList = [];
                this.xList = [];
                this.yList = [];
                (function smoothscroll() {
                    var currentScroll =
                        document.documentElement.scrollTop || document.body.scrollTop;
                    if (currentScroll > 0) {
                        window.requestAnimationFrame(smoothscroll);
                        window.scrollTo(0, currentScroll - currentScroll / 5);
                    }
                })();
                this.$axios
                    .post(this.$store.state.baseUrl + "/DataRateHisGet?java", {
                        currency: currency,
                        type: type,
                    })
                    .then((res) => {
                        this.isshowtabel = 1;
                        console.log("币种历史汇率");
                        console.log(res);
                        this.dataRateHistoryList = res.data;
                        this.dataRateHistoryreverse = this.dataRateHistoryList.reverse();
                        for (let item of this.dataRateHistoryList) {
                            this.xList.push(item.time);
                            this.yList.push(item.rate);
                        }
                        // console.log(this.xList);
                        // console.log(this.yList);
                        this.rateQuerySel.select = 1;
                        // Vue 实现响应式并不是数据发生变化之后 DOM 立即变化，nextTick会保证其内的代码在DOM更新后执行
                        this.$nextTick(() => {
                            // 基于准备好的dom，初始化echarts实例
                            let myChart = this.$echarts.init(
                                document.getElementById("myChart")
                            );
                            myChart.resize();
                            // 绘制图表
                            myChart.setOption({
                                title: {
                                    text: "汇率变化曲线图",
                                    x: "center",
                                },
                                tooltip: {
                                    trigger: "axis",
                                    axisPointer: {
                                        // 坐标轴指示器，坐标轴触发有效
                                        type: "line", // 默认为直线，可选为：'line' | 'shadow'
                                    },
                                },
                                xAxis: {
                                    data: this.xList,
                                },
                                yAxis: {},
                                series: [{
                                    name: "汇率",
                                    type: "line",
                                    data: this.yList,
                                }, ],
                            });
                            window.addEventListener("resize", function() {
                                myChart.resize();
                            });
                        });
                    })
                    .catch((err) => {
                        console.log(err);
                    });
            },
            // 现钞历史汇率
            rateLineOof(currency) {
                console.log(currency);
                this.moneyShopHistory = [];
                this.xList = [];
                this.yList = [];
                this.yList2 = [];
                this.$axios
                    .post(this.$store.state.baseUrl + "/DataRateHistory?java", {
                        currency: currency,
                    })
                    .then((res) => {
                        this.isshowtabel = 2;
                        console.log("现钞历史汇率");
                        console.log(res);
                        this.moneyShopHistory = res.data;
                        this.moneyShopHistoryreverse = this.moneyShopHistory.reverse();
                        for (let item of this.moneyShopHistory) {
                            this.xList.push(item.time);

                            this.yList.push(
                                Number(item.bankRate / item.underBankRate).toFixed(5)
                            );
                            this.yList2.push(
                                Number(
                                    Number(item.bankRate / item.underBankRate) + 0.003
                                ).toFixed(5)
                            );
                        }
                        this.rateQuerySel.select = 1;
                        (function smoothscroll() {
                            var currentScroll =
                                document.documentElement.scrollTop || document.body.scrollTop;
                            if (currentScroll > 0) {
                                window.requestAnimationFrame(smoothscroll);
                                window.scrollTo(0, currentScroll - currentScroll / 5);
                            }
                        })();
                        if (this.yList.length !== 0 && this.yList2.length !== 0) {
                            this.oofLine();
                        }
                    })
                    .catch((err) => {
                        console.log(err);
                    });
            },
            // 现钞汇率变化曲线图
            oofLine() {
                // Vue 实现响应式并不是数据发生变化之后 DOM 立即变化，nextTick会保证其内的代码在DOM更新后执行
                this.$nextTick(() => {
                    // 基于准备好的dom，初始化echarts实例
                    let myChart = this.$echarts.init(document.getElementById("myChart"));
                    myChart.resize();
                    // 绘制图表
                    myChart.setOption({
                        title: {
                            text: "汇率变化曲线图",
                            x: "10%",
                        },
                        tooltip: {
                            trigger: "axis",
                        },
                        legend: {
                            x: "70%",
                            textStyle: {
                                color: "#000",
                                fontSize: "16px",
                            },
                            icon: "rect",
                            itemWidth: 20,
                            itemHeight: 15,
                            data: ["买入价", "卖出价"],
                        },
                        xAxis: {
                            data: this.xList,
                        },
                        yAxis: {},
                        series: [{
                            name: "买入价",
                            type: "line",
                            data: this.yList,
                        }, {
                            name: "卖出价",
                            type: "line",
                            data: this.yList2,
                        }, ],
                    });
                    window.addEventListener("resize", function() {
                        myChart.resize();
                    });
                });
            },
            // 返回列表页
            gobackList() {
                this.rateQuerySel.select = 0;
                if (this.tosavetime == 1) {
                    this.tosavetime = 0;
                    console.log("点击保存后返回");
                    this.handleDataRatesGet();
                } else {
                    this.tosavetime = 0;
                    console.log("直接返回");
                    console.log(this.rateQuerySel.time);
                    if (this.rateQuerySel.time == "") {
                        this.addtate()
                        console.log(this.time);
                    } else {
                        this.time = sessionStorage.getItem("oldtime"); //从其他页面跳转过来，点击返回，日期不改为默认日期（当前日期）
                    }
                    this.handleDataRatesGet();
                }
            },
            gobackList2() {
                this.page = 0;
                console.log("goback2" + this.selectval);
                this.$emit("jumptorate", this.selectval);
            },
            // 汇率计算器
            rateCalc() {
                if (this.rateQuerySel.time != "") {
                    this.calcTime = this.rateQuerySel.time;
                } else {
                    this.calcTime = this.time;
                }
                this.dateChange2();

                this.VATInc = ""; // 税后价格
                this.CNYFinal = ""; // 最终人民币
                this.HKDFinal = ""; // 最终港币
                this.price = ""; // 价格
                // this.rateSymbol = 'x'; // 退税运算符号
                // this.rateNum = ''; // 退税数值
                // this.breakage = 10; // 退税折损
                // this.discount = 0; // 折扣

                this.dialogCalcVisible = true;
            },
            // 计算器时间查询汇率
            dateChange2() {
                this.calcRateList = [];
                this.$axios
                    .post(this.$store.state.baseUrl + "/DataRatesGet?java", {
                        time: this.calcTime,
                    })
                    .then((res) => {
                        console.log("时间查询汇率");
                        console.log(res);
                        this.calcRateList = res.data;
                        for (let item of this.calcRateList) {
                            if (item.type == 2) {
                                console.log(item.rate);
                                this.selectHKD = Number(Number(1 / item.rate) + 0.003).toFixed(5);
                            } else if (item.type == 0) {
                                this.calcTime = item.time;
                            }
                        }
                        if (this.country !== "") {
                            this.countryChange();
                        }
                    })
                    .catch((err) => {
                        console.log(err);
                    });
            },
            // 定位获得当前国家
            countryPosition() {
                console.log(navigator.geolocation);
                if (navigator.geolocation) {
                    console.log("h5 定位中");
                    navigator.geolocation.getCurrentPosition(
                        function(position) {
                            if (typeof position.address !== "undefined") {
                                console.log("h5定位成功；");
                                this.country = position.address.country;
                                this.countryChange();
                            }
                            console.log(this.country);
                        },
                        function(error) {
                            console.log("h5定位失败；");
                        }
                    );
                }
            },
            // 国家选择
            countryChange() {
                this.price = "";
                this.VATInc = "";
                this.CNYFinal = "";
                this.HKDFinal = "";
                for (let item of this.countryList) {
                    // console.log(item);
                    // console.log(this.country);
                    if (this.country == item.cnName) {
                        console.log("国家选择");
                        console.log(item);
                        this.selectCurrency = item.enCurrency;
                        if (item.taxType == 0) {
                            this.rateSymbol = "x";
                        } else if (item.taxType == 1) {
                            this.rateSymbol = "÷";
                        } else {
                            this.rateSymbol = "";
                        }
                        if (item.taxRate == 0) {
                            this.rateNum = "";
                        } else {
                            this.rateNum = item.taxRate;
                        }
                    }
                    console.log(this.rateSymbol);
                }
                console.log(this.selectCurrency);
                this.selectRate = 0;
                for (let item of this.calcRateList) {
                    console.log(item);
                    if (item.currencyEn == this.selectCurrency) {
                        this.selectRate = item.rate;
                    }
                }
                if (this.country == "中国") {
                    this.selectRate = 1;
                }
                if (this.selectRate == 0) {
                    this.$message.error({
                        message: "暂无该地区此时间对应汇率",
                        showClose: true,
                        duration: 2000,
                    });
                }
                console.log(this.selectRate);
            },
            // 计算结果
            handleRateCalcResult() {
                if (this.breakage == "") {
                    this.breakage = 0;
                }
                if (this.discount == "") {
                    this.discount = 0;
                }
                // 税后价格
                if (this.rateSymbol == "x") {
                    this.VATInc = Number(
                        (this.price - this.price * this.rateNum) * (this.breakage / 100) +
                        this.price * this.rateNum
                    ).toFixed(3);
                } else if (this.rateSymbol == "÷") {
                    this.VATInc = Number(
                        (this.price - this.price / this.rateNum) * (this.breakage / 100) +
                        this.price / this.rateNum
                    ).toFixed(3);
                }
                // 最终人民币
                this.CNYFinal = Number(
                    (this.VATInc * this.selectRate * (100 - this.discount)) / 100
                ).toFixed(3);
                // 最终港币
                this.HKDFinal = Number(
                    this.CNYFinal * (1 / this.selectHKD + 0.003)
                ).toFixed(3);
                console.log(this.VATInc);
                console.log(this.CNYFinal);
                console.log(this.HKDFinal);
                if (this.rateNum !== "") {
                    for (let item of this.countryList) {
                        // console.log(item);
                        // console.log(this.country);
                        if (this.country == item.cnName) {
                            item.taxRate = this.rateNum;
                            console.log(item);
                        }
                        console.log(this.rateSymbol);
                    }
                }
            },
            // 获取所有国家
            handleCountryGet() {
                this.$axios
                    .post(this.$store.state.baseUrl + "/CountryGet?java")
                    .then((res) => {
                        console.log("国家列表");
                        console.log(res);
                        this.countryList = res.data;
                    });
            },
            //获取日期
            addtate() {
                let date = new Date();
                let y = date.getFullYear();
                let m = date.getMonth() + 1;
                let d = date.getDate();
                m = m < 10 ? "0" + m : m;
                d = d < 10 ? "0" + d : d;
                this.time = y + "-" + m + "-" + d;
            },
            // 页面回到顶部
            backTop() {
                let timer = null;
                cancelAnimationFrame(timer);
                timer = requestAnimationFrame(function fn() {
                    var oTop =
                        document.body.scrollTop || document.documentElement.scrollTop;
                    if (oTop > 0) {
                        document.body.scrollTop = document.documentElement.scrollTop =
                            oTop - 100;
                        timer = requestAnimationFrame(fn);
                    } else {
                        cancelAnimationFrame(timer);
                    }
                });
            },
        },
    };
</script>
<style lang="scss" scoped>
    .rate-query-container {
        width: 100%;
        .rate-query {
            width: 95%;
            margin: 0 auto;
            .rate-query-top {
                width: 95%;
                margin: 0 auto;
                padding: 20px 40px;
                display: flex;
                justify-content: space-between;
                background-color: #fff;
                border-radius: 30px;
            }
            .rate-query-center {
                margin: 20px 0;
                padding: 20px 30px;
                background-color: #fff;
                border-radius: 30px;
                th {
                    height: 50px;
                    line-height: 50px;
                    background-color: #d7ebe7;
                }
                td {
                    padding: 20px;
                    /* height: 21px;
                    line-height: 21px; */
                    background-color: #f3fbf9;
                    border-bottom: 1px solid #d7ebe7;
                    .freight-input {
                        width: 40%;
                        height: 40px;
                        border: 0;
                        border-bottom: 1px solid #ddd;
                        outline: none;
                        background-color: transparent;
                        text-align: center;
                    }
                }
            }
        }
        .ratesave {
            width: 95%;
            margin: 0 auto;
            .timeandratesave {
                width: 95%;
                margin: 0 auto;
                padding: 20px 40px;
                background-color: #fff;
                border-radius: 30px;
                .timeandrate {
                    margin-left: 60px;
                    .rate-input {
                        width: 500px;
                        height: 40px;
                        border: 0;
                        border-bottom: 1px solid #ddd;
                        outline: none;
                        background-color: transparent;
                        text-align: center;
                    }
                }
            }
            .savebutton {
                width: 144px;
                height: 48px;
                margin: 20px 0;
                line-height: 48px;
                border-radius: 6px;
                text-align: center;
                cursor: pointer;
                background-color: #0c7063;
                border: none;
                color: #fff;
            }
            .goback {
                width: 95%;
                margin: 0 auto;
                .back-img {
                    width: 75px;
                    height: 45px;
                    line-height: 45px;
                    display: flex;
                    justify-content: space-between;
                    cursor: pointer;
                    div {
                        margin-top: 5px;
                        img {
                            width: 30px;
                            height: 25px;
                        }
                    }
                    .font {
                        font-size: 17px;
                    }
                }
            }
        }
        .goback {
            width: 95%;
            margin: 0 auto;
            .back-img {
                width: 75px;
                height: 45px;
                line-height: 45px;
                display: flex;
                justify-content: space-between;
                cursor: pointer;
                div {
                    margin-top: 5px;
                    img {
                        width: 30px;
                        height: 25px;
                    }
                }
                .font {
                    font-size: 17px;
                }
            }
        }
        .rate-calc {
            // width: 80%;
            // margin: 0 auto;
            // background-color: #fff;
            // border-radius: 30px;
            .calc-top {
                // width: 50%;
                margin: 0 auto;
                text-align: center;
                .calc-button {
                    width: 110px;
                    height: 40px !important;
                    margin-left: 20px;
                    font-size: 14px !important;
                }
            }
            .calc-center {
                width: 70%;
                margin: 30px auto;
                margin-bottom: 0;
                padding: 0 30px;
                border: 1px solid #ddd;
                border-radius: 30px;
            }
            .calc-bottom {
                // width: 60%;
                margin: 0 auto;
                padding: 30px;
            }
        }
    }
    
    .input-style {
        width: 90%;
    }
    
    table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
    }
    
    tr {
        th,
        td {
            width: 20%;
            text-align: center;
        }
    }
</style>