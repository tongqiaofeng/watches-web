{"remainingRequest":"D:\\aa-tong\\my-projects\\copy\\watches-three\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\copy\\watches-three\\src\\components\\purch\\Pending.vue?vue&type=template&id=689923ba&scoped=true&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\copy\\watches-three\\src\\components\\purch\\Pending.vue","mtime":1596520301017},{"path":"D:\\aa-tong\\my-projects\\copy\\watches-three\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\copy\\watches-three\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\copy\\watches-three\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\copy\\watches-three\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}