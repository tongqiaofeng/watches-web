{"remainingRequest":"D:\\aa-tong\\my-projects\\copy\\up-watches\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\copy\\up-watches\\src\\components\\purch\\Pending.vue?vue&type=template&id=689923ba&scoped=true&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\copy\\up-watches\\src\\components\\purch\\Pending.vue","mtime":1585709411864},{"path":"D:\\aa-tong\\my-projects\\copy\\up-watches\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\copy\\up-watches\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\copy\\up-watches\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\copy\\up-watches\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}